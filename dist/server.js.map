{"version":3,"sources":["webpack:///server.js","webpack:///webpack/bootstrap 31c6bfe44a04e592435a","webpack:///external \"event-emitter-extra/dist/commonjs.modern\"","webpack:///external \"lodash/forEach\"","webpack:///./src/lib/message.js","webpack:///./src/lib/utils.js","webpack:///external \"lodash/assign\"","webpack:///external \"lodash/isObject\"","webpack:///./src/server/connection.js","webpack:///./src/server/rooms.js","webpack:///external \"uws\"","webpack:///./src/lib/deferred.js","webpack:///./src/server/room.js","webpack:///external \"lodash/clone\"","webpack:///external \"lodash/debounce\"","webpack:///external \"lodash/filter\"","webpack:///external \"lodash/isFunction\"","webpack:///external \"lodash/isUndefined\"","webpack:///external \"lodash/map\"","webpack:///external \"lodash/values\"","webpack:///external \"node-uuid\"","webpack:///./src/server/server.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","require","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","isUndefined","isObject","isFunction","values","_require","generateDummyId","EventEmitterExtra","Message","_EventEmitterExtra","_ref","payload","id","err","this","_this","getPrototypeOf","isResponded_","raw","data","JSON","parse","e","Error","arguments","undefined","_this2","console","warn","then","response","emit","catch","stringify","_this3","events","eventNames","forEach","event","removeAllListeners","Names","RESPONSE","HANDSHAKE","PING","ReservedNames","promiseDelay","ms","Promise","resolve","setTimeout","_","retry","task","options","defaults","maxDelay","maxCount","initialDelay","increaseFactor","assign","timeout","counter","delay","once","clearTimeout","Math","random","pow","toString","slice","Utils","debounce","Deferred","uuid","ServerConnection","socket","server","v4","deferreds_","state","States","OPEN","handshakeResolved_","on","onMessage_","bind","onError_","onClose_","autoPing_","pingInterval","ping","flags","message","Events","MESSAGE","indexOf","onHandshake_","onPing_","onResponse_","send_","createResponse","dispose","responsePayload","handshakePayload","maxReconnectDelay","initialReconnectDelay","reconnectIncrementFactor","rooms","root","add","HANDSHAKE_OK","log","err_","handshakeResponse","deferred","reject","ERROR","code","CLOSE","removeFromAll","remove","newId","getConnectionById","roomName","getRoomsOf","eventName","_this4","setId","onExpire","_this5","send","_this6","close","_this7","filter","map","Room","Rooms","connection","getConnectionsCount","room","_ref$handler","handler","_ref$onExpire","_ref$timeout","resolve_","reject_","timeout_","onExpire_","isFinished_","promise","expire","clearTimeout_","_len","args","Array","_key","apply","_len2","_key2","clone","ServerRoom","connections","connectionId","keys","index","WebSocketServer","Server","Connection","port","bindEvents","onConnection","onHeaders","onError","CONNECTION","headers","HEADERS","getConnections","broadcast","getRoom"],"mappings":"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","file":"server.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"event-emitter-extra/dist/commonjs.modern\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/forEach\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar isUndefined = __webpack_require__(15);\nvar isObject = __webpack_require__(5);\nvar isFunction = __webpack_require__(14);\nvar values = __webpack_require__(17);\n\nvar _require = __webpack_require__(3),\n    generateDummyId = _require.generateDummyId;\n\nvar EventEmitterExtra = __webpack_require__(0);\n\n/**\n * Message class.\n *\n * @private\n * @class Message\n * @extends {EventEmitterExtra}\n * @property {string} name Event name\n * @property {?any} payload Message payload.\n */\n\nvar Message = function (_EventEmitterExtra) {\n    _inherits(Message, _EventEmitterExtra);\n\n    _createClass(Message, null, [{\n        key: 'parse',\n        value: function parse(raw) {\n            try {\n                var data = JSON.parse(raw);\n                return new Message({\n                    name: data.n,\n                    payload: data.p,\n                    err: data.e,\n                    id: data.i\n                });\n            } catch (err) {\n                throw new Error('Could not parse message.');\n            }\n        }\n    }]);\n\n    function Message(_ref) {\n        var name = _ref.name,\n            payload = _ref.payload,\n            id = _ref.id,\n            err = _ref.err;\n\n        _classCallCheck(this, Message);\n\n        var _this = _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).call(this));\n\n        _this.name = name;\n        _this.payload = payload;\n        _this.id = id;\n        _this.err = err;\n\n        _this.isResponded_ = false;\n        return _this;\n    }\n\n    _createClass(Message, [{\n        key: 'setId',\n        value: function setId() {\n            var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : generateDummyId();\n\n            this.id = id;\n            return id;\n        }\n    }, {\n        key: 'createResponse',\n        value: function createResponse(err, payload) {\n            return new Message({ name: '_r', payload: payload, err: err, id: this.id });\n        }\n\n        /**\n         * Resolves the message with sending a response back. If event source\n         * does not expecting a response, you don't need to call these methods.\n         * @param {any=} payload\n         */\n\n    }, {\n        key: 'resolve',\n        value: function resolve(payload) {\n            var _this2 = this;\n\n            if (isUndefined(this.id)) return console.warn('[line] A message without an id cannot be resolved.');\n\n            if (this.isResponded_) return console.warn('[line] This message has already been ended.');\n\n            // If thenable\n            if (isObject(payload) && isFunction(payload.then)) {\n                payload.then(function (response) {\n                    _this2.isResponded_ = true;\n                    _this2.emit('resolved', payload);\n                }).catch(function (err) {\n                    _this2.isResponded_ = true;\n                    _this2.emit('rejected', err);\n                });\n\n                return;\n            }\n\n            this.isResponded_ = true;\n            this.emit('resolved', payload);\n        }\n\n        /**\n         * Rejects the message, with sending error response back to event source.\n         * @param {any=} err\n         */\n\n    }, {\n        key: 'reject',\n        value: function reject(err) {\n            if (isUndefined(this.id)) return console.warn('[line] A message without an id cannot be rejected.');\n\n            if (this.isResponded_) return console.warn('[line] This message has already been ended.');\n\n            this.isResponded_ = true;\n            this.emit('rejected', err);\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            try {\n                var data = { n: this.name };\n\n                if (!isUndefined(this.payload)) data.p = this.payload;\n\n                if (!isUndefined(this.id)) data.i = this.id;\n\n                if (!isUndefined(this.err)) data.e = this.err;\n\n                return JSON.stringify(data);\n            } catch (err) {\n                throw new Error('Could not stringify message.');\n            }\n        }\n    }, {\n        key: 'dispose',\n        value: function dispose() {\n            var _this3 = this;\n\n            var events = this.eventNames();\n            events.forEach(function (event) {\n                return _this3.removeAllListeners(event);\n            });\n        }\n    }]);\n\n    return Message;\n}(EventEmitterExtra);\n\nMessage.Names = {\n    RESPONSE: '_r',\n    HANDSHAKE: '_h',\n    PING: '_p'\n};\n\nMessage.ReservedNames = values(Message.Names);\n\nmodule.exports = Message;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\n\nvar assign = __webpack_require__(4);\n\nfunction promiseDelay(ms) {\n    return new Promise(function (resolve) {\n        return setTimeout(function (_) {\n            return resolve();\n        }, ms);\n    });\n}\n\nfunction retry(task) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var defaults = { maxDelay: 160, maxCount: 0, initialDelay: 3, increaseFactor: 2 };\n    options = assign(defaults, options);\n    var timeout = void 0;\n    var counter = 1;\n    var delay = options.initialDelay;\n\n    var once = function once() {\n        return task().catch(function (err) {\n            counter++;\n            delay = delay * options.increaseFactor;\n\n            if (options.maxCount != 0 && counter > options.maxCount) {\n                timeout && clearTimeout(timeout);\n                throw err;\n            }\n            return promiseDelay(delay * 1000 / 2).then(function (_) {\n                return once();\n            });\n        });\n    };\n\n    return once();\n}\n\n// http://stackoverflow.com/a/6248722\nfunction generateDummyId() {\n    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4;\n\n    return (\"0000\" + (Math.random() * Math.pow(36, length) << 0).toString(36)).slice(-length);\n}\n\nmodule.exports = { promiseDelay: promiseDelay, retry: retry, generateDummyId: generateDummyId };\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/assign\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isObject\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Utils = __webpack_require__(3);\nvar Message = __webpack_require__(2);\nvar EventEmitterExtra = __webpack_require__(0);\nvar assign = __webpack_require__(4);\nvar forEach = __webpack_require__(1);\nvar isObject = __webpack_require__(5);\nvar debounce = __webpack_require__(12);\nvar Deferred = __webpack_require__(9);\nvar uuid = __webpack_require__(18);\n\n/**\n * Server connection class. Constructor of this class is not publicly accessible.\n * When you listen `Server.Events.CONNECTION` or `Server.Events.HANDSHAKE`, an instance\n * of `ServerConnection` will be emitted.\n *\n * @class ServerConnection\n * @extends {EventEmitterExtra}\n * @private\n * @property {string} id Unique connection id\n */\n\nvar ServerConnection = function (_EventEmitterExtra) {\n    _inherits(ServerConnection, _EventEmitterExtra);\n\n    function ServerConnection(socket, server) {\n        _classCallCheck(this, ServerConnection);\n\n        var _this = _possibleConstructorReturn(this, (ServerConnection.__proto__ || Object.getPrototypeOf(ServerConnection)).call(this));\n\n        _this.id = uuid.v4();\n\n        _this.socket = socket;\n        _this.server = server;\n\n        _this.deferreds_ = {};\n        _this.state = ServerConnection.States.OPEN;\n        _this.handshakeResolved_ = false;\n\n        _this.socket.on('message', _this.onMessage_.bind(_this));\n        _this.socket.on('error', _this.onError_.bind(_this));\n        _this.socket.on('close', _this.onClose_.bind(_this));\n\n        _this.autoPing_ = server.options.pingInterval > 0 ? debounce(function () {\n            if (_this.state != ServerConnection.States.OPEN) return;\n\n            _this.ping().then(function () {\n                if (server.options.pingInterval > 0 && _this.state == ServerConnection.States.OPEN) {\n                    _this.autoPing_();\n                }\n            }).catch(function () {});\n        }, server.options.pingInterval) : function () {};\n        return _this;\n    }\n\n    _createClass(ServerConnection, [{\n        key: 'onMessage_',\n        value: function onMessage_(data, flags) {\n            var _this2 = this;\n\n            var message = Message.parse(data);\n\n            this.autoPing_();\n\n            // Emit original _message event with raw data\n            this.emit(ServerConnection.Events.MESSAGE, data);\n\n            // Message without response (no id fields)\n            if (!message.id && Message.ReservedNames.indexOf(message.name) == -1) return this.emit(message.name, message);\n\n            // Handshake\n            if (message.name == Message.Names.HANDSHAKE) {\n                return this.onHandshake_(message);\n            }\n\n            // Ping\n            if (message.name == Message.Names.PING) {\n                return this.onPing_(message);\n            }\n\n            // Message response\n            if (message.name == Message.Names.RESPONSE && this.deferreds_[message.id]) {\n                return this.onResponse_(message);\n            }\n\n            // Message with response\n            message.once('resolved', function (payload) {\n                _this2.send_(message.createResponse(null, payload));\n                message.dispose();\n            });\n\n            message.once('rejected', function (err) {\n                if (isObject(err) && err instanceof Error && err.name == 'Error') err = { message: err.message, name: 'Error' };\n                _this2.send_(message.createResponse(err));\n                message.dispose();\n            });\n\n            this.emit(message.name, message);\n        }\n    }, {\n        key: 'onHandshake_',\n        value: function onHandshake_(message) {\n            var _this3 = this;\n\n            message.once('resolved', function (payload) {\n                _this3.handshakeResolved_ = true;\n\n                var responsePayload = {\n                    handshakePayload: payload,\n                    id: _this3.id,\n                    timeout: _this3.server.options.timeout,\n                    maxReconnectDelay: _this3.server.options.maxReconnectDelay,\n                    initialReconnectDelay: _this3.server.options.initialReconnectDelay,\n                    reconnectIncrementFactor: _this3.server.options.reconnectIncrementFactor,\n                    pingInterval: _this3.server.options.pingInterval\n                };\n\n                _this3.send_(message.createResponse(null, responsePayload)).then(function () {\n                    _this3.server.rooms.root.add(_this3);\n                    _this3.emit(ServerConnection.Events.HANDSHAKE_OK);\n                }).catch(function () {\n                    console.log('Handshake resolve response failed to send for ' + _this3.id + '.');\n                    _this3.onClose_(500, err);\n                }).then(function () {\n                    message.dispose();\n                });\n            });\n\n            message.once('rejected', function (err) {\n                if (isObject(err) && err instanceof Error && err.name == 'Error') err = { message: err.message, name: 'Error' };\n\n                _this3.send_(message.createResponse(err)).catch(function (err_) {\n                    console.log('Handshake reject response failed to send for ' + _this3.id + '.');\n                }).then(function () {\n                    _this3.onClose_(500, err);\n                    message.dispose();\n                });\n            });\n\n            // Sorry for party rocking\n            var handshakeResponse = this.server.emit('handshake', this, message);\n\n            if (!handshakeResponse) message.resolve();\n        }\n    }, {\n        key: 'onResponse_',\n        value: function onResponse_(message) {\n            var deferred = this.deferreds_[message.id];\n\n            if (message.err) {\n                var _err = assign(new Error(), message.err);\n                deferred.reject(_err);\n            } else {\n                deferred.resolve(message.payload);\n            }\n\n            delete this.deferreds_[message.id];\n        }\n    }, {\n        key: 'onPing_',\n        value: function onPing_(message) {\n            this.send_(message.createResponse(null, 'pong')).catch(function (err) {\n                console.log('Ping responce failed to send', err);\n            });\n        }\n    }, {\n        key: 'onError_',\n        value: function onError_(err) {\n            this.emit(ServerConnection.Events.ERROR, err);\n            this.onClose_(500, err);\n        }\n    }, {\n        key: 'onClose_',\n        value: function onClose_(code, message) {\n            if (this.state == ServerConnection.States.CLOSE) return;\n\n            this.server.rooms.removeFromAll(this);\n            this.server.rooms.root.remove(this);\n\n            forEach(this.deferreds_, function (deferred) {\n                deferred.reject(new Error('Socket connection closed!'));\n            });\n            this.deferreds_ = {};\n\n            this.state = ServerConnection.States.CLOSE;\n            this.emit(ServerConnection.Events.CLOSE, code, message);\n        }\n\n        /**\n         * Change connection's id, it's random by default. This method is helpful if you already have\n         * custom identification for your clients. You must do this before handshake resolved. If\n         * handshake is already resolved or there is conflict, this method will throw error.\n         *\n         * @param {string} newId New connection id\n         * @memberOf ServerConnection\n         */\n\n    }, {\n        key: 'setId',\n        value: function setId(newId) {\n            if (this.handshakeResolved_) throw new Error('Handshake already resolved, you cannot change connection id anymore');\n\n            if (this.server.getConnectionById(newId)) throw new Error('Conflict! There is already connection with id newId');\n\n            this.id = newId;\n        }\n\n        /**\n         * Joins the connection into provided room. If there is no room, it will be created automatically.\n         *\n         * @param {string} roomName\n         * @memberOf ServerConnection\n         */\n\n    }, {\n        key: 'joinRoom',\n        value: function joinRoom(roomName) {\n            this.server.rooms.add(roomName, this);\n        }\n\n        /**\n         * Leaves the connection from provided room.\n         *\n         * @param {string} roomName\n         * @memberOf ServerConnection\n         */\n\n    }, {\n        key: 'leaveRoom',\n        value: function leaveRoom(roomName) {\n            this.server.rooms.remove(roomName, this);\n        }\n\n        /**\n         * Gets the joined room names.\n         *\n         * @returns {Array<string>}\n         * @memberOf ServerConnection\n         */\n\n    }, {\n        key: 'getRooms',\n        value: function getRooms() {\n            return this.server.rooms.getRoomsOf(this);\n        }\n\n        /**\n         * Sends a message to client and waits for its response.\n         *\n         * @param {string} eventName\n         * @param {any=} payload\n         * @returns {Promise<any>}\n         * @memberOf ServerConnection\n         * @example\n         * connection\n         *   .send('hello', {optional: 'payload'})\n         *   .then(responsePayload => {\n         *     // Message is resolved by client\n         *   })\n         *   .catch(err => {\n         *     // Could not send message\n         *     // or\n         *     // Client rejected the message!\n         *   });\n         */\n\n    }, {\n        key: 'send',\n        value: function send(eventName, payload) {\n            var _this4 = this;\n\n            var message = new Message({ name: eventName, payload: payload });\n            message.setId();\n\n            return this.send_(message).then(function (_) {\n                var deferred = _this4.deferreds_[message.id] = new Deferred({\n                    onExpire: function onExpire() {\n                        delete _this4.deferreds_[message.id];\n                    },\n                    timeout: _this4.server.options.timeout\n                });\n\n                return deferred;\n            });\n        }\n\n        /**\n         * Sends a message to client without waiting response.\n         *\n         * @param {string} eventName\n         * @param {any=} payload\n         * @returns {Promise}\n         * @memberOf ServerConnection\n         * @example\n         * connection\n         *   .sendWithoutResponse('hello', {optional: 'payload'})\n         *   .then(() => {\n         *     // Message sent successfully\n         *   })\n         *   .catch(err => {\n         *     // Message could not be sent to client\n         *   })\n         */\n\n    }, {\n        key: 'sendWithoutResponse',\n        value: function sendWithoutResponse(eventName, payload) {\n            var message = new Message({ name: eventName, payload: payload });\n            return this.send_(message);\n        }\n    }, {\n        key: 'send_',\n        value: function send_(message) {\n            var _this5 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this5.socket.send(message.toString(), function (err) {\n                    if (err) return reject(err);\n                    resolve();\n                });\n            });\n        }\n\n        /**\n         * Pings the client. If there is no respose, closes the connection.\n         *\n         * @returns {Promise}\n         * @memberOf ServerConnection\n         */\n\n    }, {\n        key: 'ping',\n        value: function ping() {\n            var _this6 = this;\n\n            return Utils.retry(function (_) {\n                return _this6.send(Message.Names.PING);\n            }, { maxCount: 3, initialDelay: 1, increaseFactor: 1 }).catch(function (err) {\n                _this6.close(410, new Error('Ping failed, dead connection'));\n                throw err;\n            });\n        }\n\n        /**\n         * Gracefully closes the client connection.\n         *\n         * @param {number} code\n         * @param {any} data\n         * @returns {Promise}\n         */\n\n    }, {\n        key: 'close',\n        value: function close(code, data) {\n            var _this7 = this;\n\n            return new Promise(function (resolve) {\n                _this7.socket.close(code, data);\n                resolve();\n            });\n        }\n    }]);\n\n    return ServerConnection;\n}(EventEmitterExtra);\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\n\n\nServerConnection.States = {\n    /**\n     * `open` Connection is alive and open.\n     */\n    OPEN: 'open',\n    /**\n     * `close` There is no alive connection.\n     */\n    CLOSE: 'close'\n};\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\nServerConnection.Events = {\n    /**\n     * `_message`\n     */\n    MESSAGE: '_message',\n    /**\n     * @ignore\n     */\n    HANDSHAKE_OK: '_handshakeOk', // Private\n    /**\n     * `_error`\n     */\n    ERROR: '_error',\n    /**\n     * `_close`\n     */\n    CLOSE: '_close'\n};\n\nmodule.exports = ServerConnection;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar filter = __webpack_require__(13);\nvar forEach = __webpack_require__(1);\nvar map = __webpack_require__(16);\nvar Room = __webpack_require__(10);\n\nvar Rooms = function () {\n    function Rooms() {\n        _classCallCheck(this, Rooms);\n\n        this.rooms = {};\n        this.root = new Room();\n    }\n\n    _createClass(Rooms, [{\n        key: 'add',\n        value: function add(roomName, connection) {\n            if (!this.rooms[roomName]) this.rooms[roomName] = new Room(roomName);\n\n            this.rooms[roomName].add(connection);\n        }\n    }, {\n        key: 'remove',\n        value: function remove(roomName, connection) {\n            if (!this.rooms[roomName]) return;\n\n            this.rooms[roomName].remove(connection);\n\n            if (!this.rooms[roomName].getConnectionsCount()) delete this.rooms[roomName];\n        }\n    }, {\n        key: 'getRoomsOf',\n        value: function getRoomsOf(connection) {\n            return map(filter(this.rooms, function (room) {\n                return room.getConnectionById(connection.id);\n            }), 'name');\n        }\n    }, {\n        key: 'getRoom',\n        value: function getRoom(room) {\n            return this.rooms[room];\n        }\n    }, {\n        key: 'removeFromAll',\n        value: function removeFromAll(connection) {\n            var _this = this;\n\n            var rooms = this.getRoomsOf(connection);\n            forEach(rooms, function (roomName) {\n                return _this.rooms[roomName].remove(connection);\n            });\n        }\n    }]);\n\n    return Rooms;\n}();\n\nmodule.exports = Rooms;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"uws\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Deferred = function () {\n    function Deferred() {\n        var _this = this;\n\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$handler = _ref.handler,\n            handler = _ref$handler === undefined ? function () {} : _ref$handler,\n            _ref$onExpire = _ref.onExpire,\n            onExpire = _ref$onExpire === undefined ? function () {} : _ref$onExpire,\n            _ref$timeout = _ref.timeout,\n            timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n        _classCallCheck(this, Deferred);\n\n        this.resolve_ = null;\n        this.reject_ = null;\n\n        this.timeout_ = null;\n        this.onExpire_ = onExpire;\n        this.isFinished_ = false;\n\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve_ = resolve;\n            _this.reject_ = reject;\n\n            try {\n                handler(_this);\n            } catch (err) {\n                _this.reject(err);\n            }\n        });\n\n        if (timeout > 0) {\n            this.timeout_ = setTimeout(this.expire.bind(this), timeout);\n        }\n    }\n\n    _createClass(Deferred, [{\n        key: 'resolve',\n        value: function resolve(data) {\n            if (this.isFinished_) return;\n\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.resolve_(data);\n        }\n    }, {\n        key: 'reject',\n        value: function reject(err) {\n            if (this.isFinished_) return;\n\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.reject_(err);\n        }\n    }, {\n        key: 'expire',\n        value: function expire() {\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.onExpire_();\n            this.reject_(new Error('Timeout exceed'));\n        }\n    }, {\n        key: 'then',\n        value: function then() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            return this.promise.then.apply(this.promise, args);\n        }\n    }, {\n        key: 'catch',\n        value: function _catch() {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            return this.promise.catch.apply(this.promise, args);\n        }\n    }, {\n        key: 'clearTimeout_',\n        value: function clearTimeout_() {\n            if (this.timeout_) {\n                clearTimeout(this.timeout_);\n                this.timeout_ = null;\n            }\n        }\n    }]);\n\n    return Deferred;\n}();\n\nmodule.exports = Deferred;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar forEach = __webpack_require__(1);\nvar clone = __webpack_require__(11);\nvar Message = __webpack_require__(2);\n\n/**\n * Line room class.\n *\n * @private\n * @class ServerRoom\n * @param {string} name Room name\n * @property {string} name\n */\n\nvar ServerRoom = function () {\n    function ServerRoom(name) {\n        var connections = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, ServerRoom);\n\n        this.name = name;\n        this.connections = connections;\n    }\n\n    /**\n     * Adds a connection into room.\n     * @param {ServerConnection} connection\n     */\n\n\n    _createClass(ServerRoom, [{\n        key: 'add',\n        value: function add(connection) {\n            this.connections[connection.id] = connection;\n        }\n\n        /**\n         * Removes a connection from room.\n         * @param {ServerConnection} connection\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove(connection) {\n            delete this.connections[connection.id];\n        }\n\n        /**\n         * Gets a connection by id.\n         * @param {string} connectionId\n         * @returns {?ServerConnection}\n         */\n\n    }, {\n        key: 'getConnectionById',\n        value: function getConnectionById(connectionId) {\n            return this.connections[connectionId];\n        }\n\n        /**\n         * Gets all connections in the room. Returns a object where keys are\n         * connection id and values are ServerConnection.\n         * @returns {{string: ServerConnection}}\n         */\n\n    }, {\n        key: 'getConnections',\n        value: function getConnections() {\n            return clone(this.connections);\n        }\n\n        /**\n         * Returns the total connection count in room.\n         * @returns {number}\n         */\n\n    }, {\n        key: 'getConnectionsCount',\n        value: function getConnectionsCount() {\n            return Object.keys(this.connections).length;\n        }\n    }, {\n        key: 'broadcast_',\n        value: function broadcast_(message) {\n            forEach(this.connections, function (connection) {\n                connection.send_(message);\n            });\n        }\n\n        /**\n         * Broadcast a message to all connections in the room.\n         * @param {string} eventName\n         * @param {any=} payload\n         */\n\n    }, {\n        key: 'broadcast',\n        value: function broadcast(eventName, payload) {\n            var message = new Message({ name: eventName, payload: payload });\n            forEach(this.connections, function (connection, index) {\n                connection.send_(message);\n            });\n        }\n    }]);\n\n    return ServerRoom;\n}();\n\nmodule.exports = ServerRoom;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/clone\");\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/debounce\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/filter\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isFunction\");\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isUndefined\");\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/map\");\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/values\");\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"node-uuid\");\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebSocketServer = __webpack_require__(8).Server;\nvar Connection = __webpack_require__(6);\nvar Rooms = __webpack_require__(7);\nvar EventEmitterExtra = __webpack_require__(0);\n\n/**\n * Line Server Class\n * Documentation is here deneme\n *\n * @class Server\n * @extends {EventEmitterExtra}\n * @param {Object=} options Options object.\n * @param {string=} options.host Server host name. Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {number=} options.port Server port. Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {http.Server=} options.server Server object to be attached. If provided, `host` and `port` will ignored. Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {Function=} options.handleProtocols Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#optionshandleprotocols).\n * @param {string=} options.path Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {boolean=} options.noServer Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {boolean=} options.clientTracking Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {Object=} options.perMessageDeflate Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#optionspermessagedeflate).\n * @param {number=} options.timeout Timeout duration (in ms) for message responses. Default: 30 seconds\n * @param {number=} options.maxReconnectDelay Maximum reconnection delay (in seconds) for clients. Default: 60 seconds\n * @param {number=} options.initialReconnectDelay Intial reconnection delay (in seconds) for clients. Defualt: 1 seconds\n * @param {number=} options.reconnectIncrementFactor Reconnection incremental factor for clients. Default: 2\n * @param {number=} options.pingInterval Ping interval (in ms) for both server and client. Default: 60 seconds.\n * @example\n * const Server = require('line-socket/server');\n * const server = new Server({\n *   port: 8080\n * });\n */\n\nvar Server = function (_EventEmitterExtra) {\n    _inherits(Server, _EventEmitterExtra);\n\n    function Server() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, Server);\n\n        var _this = _possibleConstructorReturn(this, (Server.__proto__ || Object.getPrototypeOf(Server)).call(this));\n\n        _this.rooms = new Rooms();\n\n        _this.options = Object.assign({\n            timeout: 30000,\n            maxReconnectDelay: 60,\n            initialReconnectDelay: 1,\n            reconnectIncrementFactor: 2,\n            pingInterval: 60000\n        }, options);\n        return _this;\n    }\n\n    /**\n     * Starts the server.\n     *\n     * @returns {Promise}\n     * @memberOf Server\n     * @example\n     * server\n     *   .start()\n     *   .then(() => {\n     *     console.log('Server started');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Server could not started', err);\n     *   });\n     */\n\n\n    _createClass(Server, [{\n        key: 'start',\n        value: function start() {\n            var _this2 = this;\n\n            if (!this.options.port) {\n                this.server = new WebSocketServer(this.options);\n                this.bindEvents();\n                return Promise.resolve();\n            }\n\n            return new Promise(function (resolve, reject) {\n                _this2.server = new WebSocketServer(_this2.options, function (err) {\n                    if (err) return reject(err);\n                    _this2.bindEvents();\n                    resolve();\n                });\n            });\n        }\n\n        /**\n         * Stops the server.\n         *\n         * @returns {Promise}\n         * @memberOf Server\n         * @example\n         * server\n         *   .stop()\n         *   .then(() => {\n         *     console.log('Server stopped');\n         *   })\n         *   .catch((err) => {\n         *     console.log('Server could not stopped', err);\n         *   });\n         */\n\n    }, {\n        key: 'stop',\n        value: function stop() {\n            var _this3 = this;\n\n            if (!this.server) {\n                var err = new Error('Could not stop server. Server is probably not started, or already stopped.');\n                return Promise.reject(err);\n            }\n\n            return new Promise(function (resolve) {\n                _this3.server.close();\n                _this3.server = null;\n                resolve();\n            });\n        }\n    }, {\n        key: 'bindEvents',\n        value: function bindEvents() {\n            this.server.on('connection', this.onConnection.bind(this));\n            this.server.on('headers', this.onHeaders.bind(this));\n            this.server.on('error', this.onError.bind(this));\n        }\n    }, {\n        key: 'onConnection',\n        value: function onConnection(socket) {\n            var _this4 = this;\n\n            var connection = new Connection(socket, this);\n            connection.on(Connection.Events.HANDSHAKE_OK, function () {\n                return _this4.emit(Server.Events.CONNECTION, connection);\n            });\n        }\n    }, {\n        key: 'onHeaders',\n        value: function onHeaders(headers) {\n            this.emit(Server.Events.HEADERS, headers);\n        }\n    }, {\n        key: 'onError',\n        value: function onError(err) {\n            this.emit(Server.Events.ERROR, err);\n        }\n\n        /**\n         * Returns a object where keys are connection id and values are ServerConnection.\n         *\n         * @returns {{string: ServerConnection}}\n         * @memberOf Server\n         */\n\n    }, {\n        key: 'getConnections',\n        value: function getConnections() {\n            return this.rooms.root.getConnections();\n        }\n\n        /**\n         * Gets a connection by id\n         *\n         * @param {string} id Unique connection id, which can be accessed at `connection.id`\n         * @returns {?ServerConnection}\n         * @memberOf Server\n         * @example\n         * const connection = server.getConnectionById('someId');\n         *\n         * if (connection)\n         *   connection.send('hello', {world: ''});\n         */\n\n    }, {\n        key: 'getConnectionById',\n        value: function getConnectionById(id) {\n            return this.rooms.root.getConnectionById(id);\n        }\n\n        /**\n         * Broadcasts a message to all the connected clients.\n         *\n         * @param {string} eventName Event name\n         * @param {any=} payload Optional message payload.\n         * @memberOf Server\n         * @example\n         * server.broadcast('hello', {world: ''});\n         */\n\n    }, {\n        key: 'broadcast',\n        value: function broadcast(eventName, payload) {\n            this.rooms.root.broadcast(eventName, payload);\n        }\n\n        /**\n         * Gets a room by name.\n         * @param {string} room Room name\n         * @returns {?ServerRoom}\n         */\n\n    }, {\n        key: 'getRoom',\n        value: function getRoom(room) {\n            return this.rooms.getRoom(room);\n        }\n\n        /**\n         * Gets all the rooms of a connection.\n         * @param {ServerConnection} connection\n         * @returns {Array.<string>} Array of room names.\n         */\n\n    }, {\n        key: 'getRoomsOf',\n        value: function getRoomsOf(connection) {\n            return this.rooms.getRoomsOf(connection);\n        }\n\n        /**\n         * Remove a connection from all the rooms.\n         * @param {ServerConnection} connection\n         */\n\n    }, {\n        key: 'removeFromAllRooms',\n        value: function removeFromAllRooms(connection) {\n            this.rooms.removeFromAll(connection);\n        }\n    }]);\n\n    return Server;\n}(EventEmitterExtra);\n\n/**\n * @static\n * @readonly\n * @enum {string}\n * @example\n * server.on('connection', (connection) => {\n *   connection.send('hello');\n *   ...\n * });\n *\n * // or\n *\n * server.on(Server.Events.CONNECTION, (connection) => {\n *   connection.send('hello');\n *   ...\n * });\n *\n * // If you want to authorize your client\n * server.on('handshake', (connection, handshake) => {\n *   if (handshake.payload.token == 'test')\n *     handshake.resolve();\n *   else\n *     handshake.reject(new Error('Invalid token'));\n * });\n */\n\n\nServer.Events = {\n    /**\n     * `'connection'` This event will fire on a client connects **after successful handshake**.\n     *\n     * ```\n     * function (connection) {}\n     * ```\n     *\n     * where `connection` is a `ServerConnection` instance.\n     */\n    CONNECTION: 'connection',\n    /**\n     * `'handshake'` When a client connection is established, this event will be fired before\n     * `connection` event. If you want to authorize your clients, you must listen this event and\n     * call `handshake.resolve(payload)` or `handshake.reject(err)` accordingly. If you do not consume\n     * this events, all the client connections will be accepted.\n     *\n     * ```\n     * function (connection, handshake) {}\n     * ```\n     *\n     * where `connection` is `ServerConnection` and `handshake` is a `Message` instance.\n     */\n    HANDSHAKE: 'handshake',\n    /**\n     * `'headers'` Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#event-headers)\n     */\n    HEADERS: 'headers',\n    /**\n     * `'error'` Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#event-error)\n     */\n    ERROR: 'error'\n};\n\nmodule.exports = Server;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// server.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 31c6bfe44a04e592435a","module.exports = require(\"event-emitter-extra/dist/commonjs.modern\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"event-emitter-extra/dist/commonjs.modern\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"lodash/forEach\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/forEach\"\n// module id = 1\n// module chunks = 0","const isUndefined = require('lodash/isUndefined');\nconst isObject = require('lodash/isObject');\nconst isFunction = require('lodash/isFunction');\nconst values = require('lodash/values');\nconst {generateDummyId} = require('./utils');\nconst EventEmitterExtra = require('event-emitter-extra/dist/commonjs.modern');\n\n\n/**\n * Message class.\n *\n * @private\n * @class Message\n * @extends {EventEmitterExtra}\n * @property {string} name Event name\n * @property {?any} payload Message payload.\n */\nclass Message extends EventEmitterExtra {\n    static parse(raw) {\n        try {\n            const data = JSON.parse(raw);\n            return new Message({\n                name: data.n,\n                payload: data.p,\n                err: data.e,\n                id: data.i\n            });\n        } catch(err) {\n            throw new Error(`Could not parse message.`);\n        }\n    }\n\n    constructor({name, payload, id, err}) {\n        super();\n\n        this.name = name;\n        this.payload = payload;\n        this.id = id;\n        this.err = err;\n\n        this.isResponded_ = false;\n    }\n\n    setId(id = generateDummyId()) {\n        this.id = id;\n        return id;\n    }\n\n    createResponse(err, payload) {\n        return new Message({name: '_r', payload, err, id: this.id});\n    }\n\n\n    /**\n     * Resolves the message with sending a response back. If event source\n     * does not expecting a response, you don't need to call these methods.\n     * @param {any=} payload\n     */\n    resolve(payload) {\n        if (isUndefined(this.id))\n            return console.warn('[line] A message without an id cannot be resolved.');\n\n        if (this.isResponded_)\n            return console.warn('[line] This message has already been ended.');\n\n        // If thenable\n        if (isObject(payload) && isFunction(payload.then)) {\n            payload\n                .then(response => {\n                    this.isResponded_ = true;\n                    this.emit('resolved', payload);\n                })\n                .catch(err => {\n                    this.isResponded_ = true;\n                    this.emit('rejected', err);\n                });\n\n            return;\n        }\n\n        this.isResponded_ = true;\n        this.emit('resolved', payload);\n    }\n\n\n    /**\n     * Rejects the message, with sending error response back to event source.\n     * @param {any=} err\n     */\n    reject(err) {\n        if (isUndefined(this.id))\n            return console.warn('[line] A message without an id cannot be rejected.');\n\n        if (this.isResponded_)\n            return console.warn('[line] This message has already been ended.');\n\n        this.isResponded_ = true;\n        this.emit('rejected', err);\n    }\n\n    toString() {\n        try {\n            const data = {n: this.name};\n\n            if (!isUndefined(this.payload))\n                data.p = this.payload;\n\n            if (!isUndefined(this.id))\n                data.i = this.id;\n\n            if (!isUndefined(this.err))\n                data.e = this.err;\n\n            return JSON.stringify(data);\n        } catch(err) {\n            throw new Error(`Could not stringify message.`);\n        }\n    }\n\n    dispose() {\n        const events = this.eventNames();\n        events.forEach(event => this.removeAllListeners(event));\n    }\n}\n\n\nMessage.Names = {\n    RESPONSE: '_r',\n    HANDSHAKE: '_h',\n    PING: '_p'\n};\n\n\nMessage.ReservedNames = values(Message.Names);\n\n\nmodule.exports = Message;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/message.js","const assign = require('lodash/assign');\n\n\nfunction promiseDelay(ms) {\n    return new Promise(resolve => setTimeout(_ => resolve(), ms))\n}\n\n\nfunction retry(task, options = {}) {\n    const defaults = {maxDelay: 160, maxCount: 0, initialDelay: 3, increaseFactor: 2};\n    options = assign(defaults, options);\n    let timeout;\n    let counter = 1;\n    let delay = options.initialDelay;\n\n    const once = function() {\n        return task()\n            .catch(err => {\n                counter++;\n                delay = delay * options.increaseFactor;\n\n                if (options.maxCount != 0 && counter > options.maxCount) {\n                    timeout && clearTimeout(timeout);\n                    throw err;\n                }\n                return promiseDelay(delay * 1000 / 2).then(_ => once());\n            });\n    }\n\n    return once();\n}\n\n\n// http://stackoverflow.com/a/6248722\nfunction generateDummyId(length = 4) {\n    return (\"0000\" + (Math.random()*Math.pow(36,length) << 0).toString(36)).slice(-length);\n}\n\n\nmodule.exports = {promiseDelay, retry, generateDummyId};\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils.js","module.exports = require(\"lodash/assign\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/assign\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"lodash/isObject\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isObject\"\n// module id = 5\n// module chunks = 0","const Utils = require('../lib/utils');\nconst Message = require('../lib/message');\nconst EventEmitterExtra = require('event-emitter-extra/dist/commonjs.modern');\nconst assign = require('lodash/assign');\nconst forEach = require('lodash/forEach');\nconst isObject = require('lodash/isObject');\nconst debounce = require('lodash/debounce');\nconst Deferred = require('../lib/deferred');\nconst uuid = require('node-uuid');\n\n\n/**\n * Server connection class. Constructor of this class is not publicly accessible.\n * When you listen `Server.Events.CONNECTION` or `Server.Events.HANDSHAKE`, an instance\n * of `ServerConnection` will be emitted.\n *\n * @class ServerConnection\n * @extends {EventEmitterExtra}\n * @private\n * @property {string} id Unique connection id\n */\nclass ServerConnection extends EventEmitterExtra {\n    constructor(socket, server) {\n        super();\n\n        this.id = uuid.v4();\n\n        this.socket = socket;\n        this.server = server;\n\n        this.deferreds_ = {};\n        this.state = ServerConnection.States.OPEN;\n        this.handshakeResolved_ = false;\n\n        this.socket.on('message', this.onMessage_.bind(this));\n        this.socket.on('error', this.onError_.bind(this));\n        this.socket.on('close', this.onClose_.bind(this));\n\n        this.autoPing_ = server.options.pingInterval > 0 ?\n            debounce(() => {\n                if (this.state != ServerConnection.States.OPEN)\n                    return;\n\n                this\n                    .ping()\n                    .then(() => {\n                        if (server.options.pingInterval > 0 && this.state == ServerConnection.States.OPEN) {\n                            this.autoPing_();\n                        }\n                    })\n                    .catch(() => {});\n            }, server.options.pingInterval) :\n            () => {};\n    }\n\n\n    onMessage_(data, flags) {\n        const message = Message.parse(data);\n\n        this.autoPing_();\n\n        // Emit original _message event with raw data\n        this.emit(ServerConnection.Events.MESSAGE, data);\n\n        // Message without response (no id fields)\n        if (!message.id && Message.ReservedNames.indexOf(message.name) == -1)\n            return this.emit(message.name, message);\n\n        // Handshake\n        if (message.name == Message.Names.HANDSHAKE) {\n            return this.onHandshake_(message);\n        }\n\n        // Ping\n        if (message.name == Message.Names.PING) {\n            return this.onPing_(message);\n        }\n\n        // Message response\n        if (message.name == Message.Names.RESPONSE && this.deferreds_[message.id]) {\n            return this.onResponse_(message);\n        }\n\n        // Message with response\n        message.once('resolved', payload => {\n            this.send_(message.createResponse(null, payload));\n            message.dispose();\n        });\n\n        message.once('rejected', err => {\n            if (isObject(err) && err instanceof Error && err.name == 'Error')\n               err = {message: err.message, name: 'Error'};\n            this.send_(message.createResponse(err));\n            message.dispose();\n        });\n\n        this.emit(message.name, message);\n    }\n\n\n    onHandshake_(message) {\n        message.once('resolved', payload => {\n            this.handshakeResolved_ = true;\n\n            const responsePayload = {\n                handshakePayload: payload,\n                id: this.id,\n                timeout: this.server.options.timeout,\n                maxReconnectDelay: this.server.options.maxReconnectDelay,\n                initialReconnectDelay: this.server.options.initialReconnectDelay,\n                reconnectIncrementFactor: this.server.options.reconnectIncrementFactor,\n                pingInterval: this.server.options.pingInterval\n            };\n\n            this\n                .send_(message.createResponse(null, responsePayload))\n                .then(() => {\n                    this.server.rooms.root.add(this);\n                    this.emit(ServerConnection.Events.HANDSHAKE_OK);\n                })\n                .catch(() => {\n                    console.log(`Handshake resolve response failed to send for ${this.id}.`);\n                    this.onClose_(500, err);\n                })\n                .then(() => {\n                    message.dispose();\n                });\n        });\n\n        message.once('rejected', err => {\n            if (isObject(err) && err instanceof Error && err.name == 'Error')\n               err = {message: err.message, name: 'Error'};\n\n            this\n                .send_(message.createResponse(err))\n                .catch(err_ => {\n                    console.log(`Handshake reject response failed to send for ${this.id}.`);\n                })\n                .then(() => {\n                    this.onClose_(500, err);\n                    message.dispose();\n                });\n        });\n\n        // Sorry for party rocking\n        const handshakeResponse = this.server.emit('handshake', this, message);\n\n        if (!handshakeResponse)\n            message.resolve();\n    }\n\n\n    onResponse_(message) {\n        const deferred = this.deferreds_[message.id];\n\n        if (message.err) {\n            const err = assign(new Error(), message.err);\n            deferred.reject(err);\n        } else {\n            deferred.resolve(message.payload);\n        }\n\n        delete this.deferreds_[message.id];\n    }\n\n\n    onPing_(message) {\n        this\n            .send_(message.createResponse(null, 'pong'))\n            .catch(err => {\n                console.log('Ping responce failed to send', err);\n            });\n    }\n\n\n    onError_(err) {\n        this.emit(ServerConnection.Events.ERROR, err);\n        this.onClose_(500, err);\n    }\n\n\n    onClose_(code, message) {\n        if (this.state == ServerConnection.States.CLOSE)\n            return;\n\n        this.server.rooms.removeFromAll(this);\n        this.server.rooms.root.remove(this);\n\n        forEach(this.deferreds_, (deferred) => {\n            deferred.reject(new Error('Socket connection closed!'));\n        });\n        this.deferreds_ = {};\n\n        this.state = ServerConnection.States.CLOSE;\n        this.emit(ServerConnection.Events.CLOSE, code, message);\n    }\n\n\n    /**\n     * Change connection's id, it's random by default. This method is helpful if you already have\n     * custom identification for your clients. You must do this before handshake resolved. If\n     * handshake is already resolved or there is conflict, this method will throw error.\n     *\n     * @param {string} newId New connection id\n     * @memberOf ServerConnection\n     */\n    setId(newId) {\n        if (this.handshakeResolved_)\n            throw new Error('Handshake already resolved, you cannot change connection id anymore');\n\n        if (this.server.getConnectionById(newId))\n            throw new Error(`Conflict! There is already connection with id newId`);\n\n        this.id = newId;\n    }\n\n\n    /**\n     * Joins the connection into provided room. If there is no room, it will be created automatically.\n     *\n     * @param {string} roomName\n     * @memberOf ServerConnection\n     */\n    joinRoom(roomName) {\n        this.server.rooms.add(roomName, this);\n    }\n\n\n    /**\n     * Leaves the connection from provided room.\n     *\n     * @param {string} roomName\n     * @memberOf ServerConnection\n     */\n    leaveRoom(roomName) {\n        this.server.rooms.remove(roomName, this);\n    }\n\n\n\n    /**\n     * Gets the joined room names.\n     *\n     * @returns {Array<string>}\n     * @memberOf ServerConnection\n     */\n    getRooms() {\n        return this.server.rooms.getRoomsOf(this);\n    }\n\n\n    /**\n     * Sends a message to client and waits for its response.\n     *\n     * @param {string} eventName\n     * @param {any=} payload\n     * @returns {Promise<any>}\n     * @memberOf ServerConnection\n     * @example\n     * connection\n     *   .send('hello', {optional: 'payload'})\n     *   .then(responsePayload => {\n     *     // Message is resolved by client\n     *   })\n     *   .catch(err => {\n     *     // Could not send message\n     *     // or\n     *     // Client rejected the message!\n     *   });\n     */\n    send(eventName, payload) {\n        const message = new Message({name: eventName, payload});\n        message.setId();\n\n        return this\n            .send_(message)\n            .then(_ => {\n                const deferred = this.deferreds_[message.id] = new Deferred({\n                    onExpire: () => {\n                        delete this.deferreds_[message.id];\n                    },\n                    timeout: this.server.options.timeout\n                });\n\n                return deferred;\n            });\n    }\n\n\n    /**\n     * Sends a message to client without waiting response.\n     *\n     * @param {string} eventName\n     * @param {any=} payload\n     * @returns {Promise}\n     * @memberOf ServerConnection\n     * @example\n     * connection\n     *   .sendWithoutResponse('hello', {optional: 'payload'})\n     *   .then(() => {\n     *     // Message sent successfully\n     *   })\n     *   .catch(err => {\n     *     // Message could not be sent to client\n     *   })\n     */\n    sendWithoutResponse(eventName, payload) {\n        const message = new Message({name: eventName, payload});\n        return this.send_(message);\n    }\n\n\n    send_(message) {\n        return new Promise((resolve, reject) => {\n            this.socket.send(message.toString(), err => {\n                if (err) return reject(err);\n                resolve();\n            });\n        });\n    }\n\n\n    /**\n     * Pings the client. If there is no respose, closes the connection.\n     *\n     * @returns {Promise}\n     * @memberOf ServerConnection\n     */\n    ping() {\n        return Utils\n            .retry(_ => this.send(Message.Names.PING), {maxCount: 3, initialDelay: 1, increaseFactor: 1})\n            .catch(err => {\n                this.close(410, new Error('Ping failed, dead connection'));\n                throw err;\n            });\n    }\n\n\n    /**\n     * Gracefully closes the client connection.\n     *\n     * @param {number} code\n     * @param {any} data\n     * @returns {Promise}\n     */\n    close(code, data) {\n        return new Promise(resolve => {\n            this.socket.close(code, data);\n            resolve();\n        });\n    }\n}\n\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\nServerConnection.States = {\n    /**\n     * `open` Connection is alive and open.\n     */\n    OPEN: 'open',\n    /**\n     * `close` There is no alive connection.\n     */\n    CLOSE: 'close'\n};\n\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\nServerConnection.Events = {\n    /**\n     * `_message`\n     */\n    MESSAGE: '_message',\n    /**\n     * @ignore\n     */\n    HANDSHAKE_OK: '_handshakeOk', // Private\n    /**\n     * `_error`\n     */\n    ERROR: '_error',\n    /**\n     * `_close`\n     */\n    CLOSE: '_close'\n};\n\n\nmodule.exports = ServerConnection;\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/connection.js","const filter = require('lodash/filter');\nconst forEach = require('lodash/forEach');\nconst map = require('lodash/map');\nconst Room = require('./room');\n\n\nclass Rooms {\n    constructor() {\n        this.rooms = {};\n        this.root = new Room();\n    }\n\n    add(roomName, connection) {\n        if(!this.rooms[roomName])\n            this.rooms[roomName] = new Room(roomName);\n\n        this.rooms[roomName].add(connection);\n    }\n\n    remove(roomName, connection) {\n        if(!this.rooms[roomName])\n            return;\n\n        this.rooms[roomName].remove(connection);\n\n        if (!this.rooms[roomName].getConnectionsCount())\n            delete this.rooms[roomName];\n    }\n\n    getRoomsOf(connection) {\n        return map(filter(this.rooms, room => room.getConnectionById(connection.id)), 'name');\n    }\n\n    getRoom(room) {\n        return this.rooms[room];\n    }\n\n    removeFromAll(connection) {\n        const rooms = this.getRoomsOf(connection);\n        forEach(rooms, roomName => this.rooms[roomName].remove(connection));\n    }\n}\n\n\nmodule.exports = Rooms;\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/rooms.js","module.exports = require(\"uws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uws\"\n// module id = 8\n// module chunks = 0","class Deferred {\n    constructor({\n        handler = () => {},\n        onExpire = () => {},\n        timeout = 0\n    } = {}) {\n        this.resolve_ = null;\n        this.reject_ = null;\n\n        this.timeout_ = null;\n        this.onExpire_ = onExpire;\n        this.isFinished_ = false;\n\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve_ = resolve;\n            this.reject_ = reject;\n\n            try {\n                handler(this);\n            } catch (err) {\n                this.reject(err);\n            }\n        });\n\n        if (timeout > 0) {\n            this.timeout_ = setTimeout(this.expire.bind(this), timeout);\n        }\n    }\n\n\n    resolve(data) {\n        if (this.isFinished_) return;\n\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.resolve_(data);\n    }\n\n\n    reject(err) {\n        if (this.isFinished_) return;\n\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.reject_(err);\n    }\n\n\n    expire() {\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.onExpire_();\n        this.reject_(new Error('Timeout exceed'));\n    }\n\n\n    then(...args) {\n        return this.promise.then.apply(this.promise, args);\n    }\n\n\n    catch(...args) {\n        return this.promise.catch.apply(this.promise, args);\n    }\n\n\n    clearTimeout_() {\n        if (this.timeout_) {\n            clearTimeout(this.timeout_);\n            this.timeout_ = null;\n        }\n    }\n}\n\n\nmodule.exports = Deferred;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/deferred.js","const forEach = require('lodash/forEach');\nconst clone = require('lodash/clone');\nconst Message = require('../lib/message');\n\n\n/**\n * Line room class.\n *\n * @private\n * @class ServerRoom\n * @param {string} name Room name\n * @property {string} name\n */\nclass ServerRoom {\n    constructor(name, connections = {}) {\n        this.name = name;\n        this.connections = connections;\n    }\n\n\n    /**\n     * Adds a connection into room.\n     * @param {ServerConnection} connection\n     */\n    add(connection) {\n        this.connections[connection.id] = connection;\n    }\n\n\n    /**\n     * Removes a connection from room.\n     * @param {ServerConnection} connection\n     */\n    remove(connection) {\n        delete this.connections[connection.id];\n    }\n\n\n    /**\n     * Gets a connection by id.\n     * @param {string} connectionId\n     * @returns {?ServerConnection}\n     */\n    getConnectionById(connectionId) {\n        return this.connections[connectionId];\n    }\n\n\n    /**\n     * Gets all connections in the room. Returns a object where keys are\n     * connection id and values are ServerConnection.\n     * @returns {{string: ServerConnection}}\n     */\n    getConnections() {\n        return clone(this.connections);\n    }\n\n\n    /**\n     * Returns the total connection count in room.\n     * @returns {number}\n     */\n    getConnectionsCount() {\n        return Object.keys(this.connections).length;\n    }\n\n    broadcast_(message) {\n        forEach(this.connections, connection => {\n            connection.send_(message)\n        });\n    }\n\n\n    /**\n     * Broadcast a message to all connections in the room.\n     * @param {string} eventName\n     * @param {any=} payload\n     */\n    broadcast(eventName, payload) {\n        const message = new Message({name: eventName, payload});\n        forEach(this.connections, (connection, index) => {\n            connection.send_(message)\n        });\n    }\n}\n\n\nmodule.exports = ServerRoom;\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/room.js","module.exports = require(\"lodash/clone\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/clone\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"lodash/debounce\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/debounce\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"lodash/filter\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/filter\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"lodash/isFunction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isFunction\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"lodash/isUndefined\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isUndefined\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"lodash/map\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/map\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"lodash/values\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/values\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"node-uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"node-uuid\"\n// module id = 18\n// module chunks = 0","const WebSocketServer = require('uws').Server;\nconst Connection = require('./connection');\nconst Rooms = require('./rooms');\nconst EventEmitterExtra = require('event-emitter-extra/dist/commonjs.modern');\n\n\n/**\n * Line Server Class\n * Documentation is here deneme\n *\n * @class Server\n * @extends {EventEmitterExtra}\n * @param {Object=} options Options object.\n * @param {string=} options.host Server host name. Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {number=} options.port Server port. Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {http.Server=} options.server Server object to be attached. If provided, `host` and `port` will ignored. Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {Function=} options.handleProtocols Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#optionshandleprotocols).\n * @param {string=} options.path Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {boolean=} options.noServer Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {boolean=} options.clientTracking Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback).\n * @param {Object=} options.perMessageDeflate Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#optionspermessagedeflate).\n * @param {number=} options.timeout Timeout duration (in ms) for message responses. Default: 30 seconds\n * @param {number=} options.maxReconnectDelay Maximum reconnection delay (in seconds) for clients. Default: 60 seconds\n * @param {number=} options.initialReconnectDelay Intial reconnection delay (in seconds) for clients. Defualt: 1 seconds\n * @param {number=} options.reconnectIncrementFactor Reconnection incremental factor for clients. Default: 2\n * @param {number=} options.pingInterval Ping interval (in ms) for both server and client. Default: 60 seconds.\n * @example\n * const Server = require('line-socket/server');\n * const server = new Server({\n *   port: 8080\n * });\n */\nclass Server extends EventEmitterExtra {\n    constructor(options = {}) {\n        super();\n\n        this.rooms = new Rooms();\n\n        this.options = Object.assign({\n            timeout: 30000,\n            maxReconnectDelay: 60,\n            initialReconnectDelay: 1,\n            reconnectIncrementFactor: 2,\n            pingInterval: 60000\n        }, options);\n    }\n\n    /**\n     * Starts the server.\n     *\n     * @returns {Promise}\n     * @memberOf Server\n     * @example\n     * server\n     *   .start()\n     *   .then(() => {\n     *     console.log('Server started');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Server could not started', err);\n     *   });\n     */\n    start() {\n        if (!this.options.port) {\n            this.server = new WebSocketServer(this.options);\n            this.bindEvents();\n            return Promise.resolve();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.server = new WebSocketServer(this.options, err => {\n                if (err) return reject(err);\n                this.bindEvents();\n                resolve();\n            });\n        })\n    }\n\n\n    /**\n     * Stops the server.\n     *\n     * @returns {Promise}\n     * @memberOf Server\n     * @example\n     * server\n     *   .stop()\n     *   .then(() => {\n     *     console.log('Server stopped');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Server could not stopped', err);\n     *   });\n     */\n    stop() {\n        if (!this.server) {\n            const err = new Error('Could not stop server. Server is probably not started, or already stopped.');\n            return Promise.reject(err);\n        }\n\n        return new Promise(resolve => {\n            this.server.close();\n            this.server = null;\n            resolve();\n        });\n    }\n\n\n    bindEvents() {\n        this.server.on('connection', this.onConnection.bind(this));\n        this.server.on('headers', this.onHeaders.bind(this));\n        this.server.on('error', this.onError.bind(this));\n    }\n\n\n    onConnection(socket) {\n        const connection = new Connection(socket, this);\n        connection.on(Connection.Events.HANDSHAKE_OK, () => this.emit(Server.Events.CONNECTION, connection));\n    }\n\n\n    onHeaders(headers) {\n        this.emit(Server.Events.HEADERS, headers);\n    }\n\n\n    onError(err) {\n        this.emit(Server.Events.ERROR, err);\n    }\n\n\n    /**\n     * Returns a object where keys are connection id and values are ServerConnection.\n     *\n     * @returns {{string: ServerConnection}}\n     * @memberOf Server\n     */\n    getConnections() {\n        return this.rooms.root.getConnections();\n    }\n\n\n    /**\n     * Gets a connection by id\n     *\n     * @param {string} id Unique connection id, which can be accessed at `connection.id`\n     * @returns {?ServerConnection}\n     * @memberOf Server\n     * @example\n     * const connection = server.getConnectionById('someId');\n     *\n     * if (connection)\n     *   connection.send('hello', {world: ''});\n     */\n    getConnectionById(id) {\n        return this.rooms.root.getConnectionById(id);\n    }\n\n\n    /**\n     * Broadcasts a message to all the connected clients.\n     *\n     * @param {string} eventName Event name\n     * @param {any=} payload Optional message payload.\n     * @memberOf Server\n     * @example\n     * server.broadcast('hello', {world: ''});\n     */\n    broadcast(eventName, payload) {\n        this.rooms.root.broadcast(eventName, payload);\n    }\n\n\n    /**\n     * Gets a room by name.\n     * @param {string} room Room name\n     * @returns {?ServerRoom}\n     */\n    getRoom(room) {\n        return this.rooms.getRoom(room);\n    }\n\n    /**\n     * Gets all the rooms of a connection.\n     * @param {ServerConnection} connection\n     * @returns {Array.<string>} Array of room names.\n     */\n    getRoomsOf(connection) {\n        return this.rooms.getRoomsOf(connection);\n    }\n\n\n    /**\n     * Remove a connection from all the rooms.\n     * @param {ServerConnection} connection\n     */\n    removeFromAllRooms(connection) {\n        this.rooms.removeFromAll(connection);\n    }\n}\n\n\n/**\n * @static\n * @readonly\n * @enum {string}\n * @example\n * server.on('connection', (connection) => {\n *   connection.send('hello');\n *   ...\n * });\n *\n * // or\n *\n * server.on(Server.Events.CONNECTION, (connection) => {\n *   connection.send('hello');\n *   ...\n * });\n *\n * // If you want to authorize your client\n * server.on('handshake', (connection, handshake) => {\n *   if (handshake.payload.token == 'test')\n *     handshake.resolve();\n *   else\n *     handshake.reject(new Error('Invalid token'));\n * });\n */\nServer.Events = {\n    /**\n     * `'connection'` This event will fire on a client connects **after successful handshake**.\n     *\n     * ```\n     * function (connection) {}\n     * ```\n     *\n     * where `connection` is a `ServerConnection` instance.\n     */\n    CONNECTION: 'connection',\n    /**\n     * `'handshake'` When a client connection is established, this event will be fired before\n     * `connection` event. If you want to authorize your clients, you must listen this event and\n     * call `handshake.resolve(payload)` or `handshake.reject(err)` accordingly. If you do not consume\n     * this events, all the client connections will be accepted.\n     *\n     * ```\n     * function (connection, handshake) {}\n     * ```\n     *\n     * where `connection` is `ServerConnection` and `handshake` is a `Message` instance.\n     */\n    HANDSHAKE: 'handshake',\n    /**\n     * `'headers'` Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#event-headers)\n     */\n    HEADERS: 'headers',\n    /**\n     * `'error'` Inherited from uws, [see docs](https://github.com/websockets/ws/blob/master/doc/ws.md#event-error)\n     */\n    ERROR: 'error'\n};\n\n\nmodule.exports = Server;\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/server.js"],"sourceRoot":""}