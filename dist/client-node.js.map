{"version":3,"sources":["webpack:///client-node.js","webpack:///webpack/bootstrap 39f30ec94b4c852f1891","webpack:///./src/lib/utils.js","webpack:///external \"event-emitter-extra/dist/commonjs.modern\"","webpack:///external \"lodash/isObject\"","webpack:///./src/client/client-web.js","webpack:///external \"uws\"","webpack:///./src/lib/deferred.js","webpack:///./src/lib/message.js","webpack:///external \"debug\"","webpack:///external \"lodash/assign\"","webpack:///external \"lodash/debounce\"","webpack:///external \"lodash/isBoolean\"","webpack:///external \"lodash/isFunction\"","webpack:///external \"lodash/isUndefined\"","webpack:///external \"lodash/values\"","webpack:///./src/client/client-node.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","promiseDelay","ms","Promise","resolve","setTimeout","_","retry","task","options","arguments","length","undefined","defaults","maxDelay","maxCount","initialDelay","increaseFactor","assign","timeout","counter","delay","once","catch","err","clearTimeout","then","generateDummyId","Math","random","pow","toString","slice","require","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","Message","Utils","EventEmitterExtra","Deferred","debounce","isObject","isBoolean","debug","Client","_EventEmitterExtra","url","this","_this","getPrototypeOf","ws_","id","reconnect","reconnectDisabled_","serverTimeout_","maxReconnectDelay","initialReconnectDelay","reconnectIncrementFactor","pingInterval","deferreds_","connectDeferred_","connectError_","disconnectDeferred_","disconnectTimeoutDuration_","disconnectTimeout_","state","States","READY","uptimeInterval_","uptimeBuffer_","uptimeBufferLength_","uptimeCheck_","keepUptime","setInterval","uptimeTick_","bind","autoPing_","CONNECTED","ping","_this2","CONNECTING","reject","Error","CLOSING","CLOSED","handler","emit","Events","WebSocket","bindEvents_","code","reason","opt_retry","_this3","ERROR","close","onClose","onopen","onOpen","onclose","onerror","onError","onmessage","onMessage","_this4","send","Names","HANDSHAKE","handshakePayload","data","disconnect","console","log","_this5","unBindEvents_","retrying_","connect","eventName","CONNECTING_ERROR","e","_this6","message","parse","ReservedNames","indexOf","PING","onPing_","RESPONSE","deferred","payload","send_","createResponse","dispose","_this7","setId","onExpire","_this8","_this9","currentSocket","push","splice","filter","val","removeAllListeners","clearInterval","_ref","_ref$handler","_ref$onExpire","_ref$timeout","resolve_","reject_","timeout_","onExpire_","isFinished_","promise","expire","clearTimeout_","_len","args","Array","_key","apply","_len2","_key2","isUndefined","isFunction","values","_require","isResponded_","raw","JSON","warn","response","stringify","events","eventNames","forEach","event","_get","receiver","Function","desc","getOwnPropertyDescriptor","parent","global","WebClient","NodeClient","_WebClient","on"],"mappings":"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","file":"client-node.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\n\nvar assign = __webpack_require__(8);\n\nfunction promiseDelay(ms) {\n    return new Promise(function (resolve) {\n        return setTimeout(function (_) {\n            return resolve();\n        }, ms);\n    });\n}\n\nfunction retry(task) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var defaults = { maxDelay: 160, maxCount: 0, initialDelay: 3, increaseFactor: 2 };\n    options = assign(defaults, options);\n    var timeout = void 0;\n    var counter = 1;\n    var delay = options.initialDelay;\n\n    var once = function once() {\n        return task().catch(function (err) {\n            counter++;\n            delay = delay * options.increaseFactor;\n\n            if (options.maxCount != 0 && counter > options.maxCount) {\n                timeout && clearTimeout(timeout);\n                throw err;\n            }\n            return promiseDelay(delay * 1000 / 2).then(function (_) {\n                return once();\n            });\n        });\n    };\n\n    return once();\n}\n\n// http://stackoverflow.com/a/6248722\nfunction generateDummyId() {\n    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4;\n\n    return (\"0000\" + (Math.random() * Math.pow(36, length) << 0).toString(36)).slice(-length);\n}\n\nmodule.exports = { promiseDelay: promiseDelay, retry: retry, generateDummyId: generateDummyId };\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"event-emitter-extra/dist/commonjs.modern\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isObject\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Message = __webpack_require__(6);\nvar Utils = __webpack_require__(0);\nvar EventEmitterExtra = __webpack_require__(1);\nvar Deferred = __webpack_require__(5);\nvar debounce = __webpack_require__(9);\nvar isObject = __webpack_require__(2);\nvar isBoolean = __webpack_require__(10);\nvar debug = __webpack_require__(7)('line:client-web');\n\n/**\n * Line client class.\n *\n * @class Client\n * @extends {EventEmitterExtra}\n * @param {string=} url Server url, default: `ws://localhost`.\n * @param {Object=} options Options object.\n * @param {boolean=} options.reconnect Try to reconnect server after unexpected disconnection, default `true`.\n * @param {boolean=} options.keepUptime Keeps uptime, default `false`.\n * @param {any=} options.handshakePayload Handshake payload to be sent to server.\n * @property {string} url Server url\n * @property {string} id Unique connection id assigned by the server\n * @property {Client.States} state Connection state\n * @example\n * // Add line-client to your html document\n * <script src=\"./node_modules/line-socket/dist/client-web-globals.js\"></script>\n *\n * // For web browsers (consuming as a commonjs module)\n * const LineClient = require('line-socket/client-web');\n *\n * // For node.js\n * const LineClient = require('line-socket/client-node');\n *\n *\n * const client = new LineClient('ws://localhost:8080', {\n *   reconnect: false,\n *   handshakePayload: { token: 'a6g3X' }\n * });\n */\n\nvar Client = function (_EventEmitterExtra) {\n    _inherits(Client, _EventEmitterExtra);\n\n    function Client() {\n        var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ws://localhost';\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, Client);\n\n        var _this = _possibleConstructorReturn(this, (Client.__proto__ || Object.getPrototypeOf(Client)).call(this));\n\n        _this.url = url;\n\n        _this.options = options;\n\n        _this.ws_ = null;\n        _this.id = null;\n        _this.reconnect = isBoolean(options.reconnect) ? options.reconnect : true;\n        _this.reconnectDisabled_ = false;\n\n        _this.serverTimeout_ = 10000;\n        _this.maxReconnectDelay = 60;\n        _this.initialReconnectDelay = 1;\n        _this.reconnectIncrementFactor = 1.5;\n        _this.pingInterval = 30000;\n\n        _this.deferreds_ = {};\n        _this.connectDeferred_ = null;\n        _this.connectError_ = null;\n        _this.disconnectDeferred_ = null;\n        _this.disconnectTimeoutDuration_ = 30000;\n        _this.disconnectTimeout_ = null;\n\n        _this.state = Client.States.READY;\n\n        _this.uptimeInterval_ = 5000;\n        _this.uptimeBuffer_ = [];\n        _this.uptimeBufferLength_ = 5 * 60000 / _this.uptimeInterval_;\n        _this.uptimeCheck_ = options.keepUptime ? setInterval(_this.uptimeTick_.bind(_this), _this.uptimeInterval_) : null;\n\n        _this.autoPing_ = _this.pingInterval > 0 ? debounce(function () {\n            if (_this.state != Client.States.CONNECTED) return;\n\n            _this.ping().then(function () {\n                if (_this.pingInterval > 0 && _this.state == Client.States.CONNECTED) {\n                    _this.autoPing_();\n                }\n            }).catch(function () {});\n        }, _this.pingInterval) : function () {};\n        return _this;\n    }\n\n    /**\n     * Connects to server.\n     * @returns {Promise}\n     * @example\n     * client\n     *   .connect()\n     *   .then((handshakeResponse) => {\n     *     // handshakeResponse will be undefined if you do not resolve\n     *     // the handshake with a payload in server\n     *     console.log('Connected');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not connect');\n     *   })\n     */\n\n\n    _createClass(Client, [{\n        key: 'connect',\n        value: function connect() {\n            var _this2 = this;\n\n            switch (this.state) {\n                case Client.States.CONNECTING:\n                    return Promise.reject(new Error('Could not connect, already trying to connect to a host...'));\n                case Client.States.CONNECTED:\n                    return Promise.reject(new Error('Already connected.'));\n                case Client.States.CLOSING:\n                    return Promise.reject(new Error('Terminating an active connecting, try again later.'));\n                case Client.States.CLOSED:\n                case Client.States.READY:\n                    this.connectError_ = null;\n                    this.connectDeferred_ = new Deferred({\n                        handler: function handler() {\n                            _this2.state = Client.States.CONNECTING;\n                            _this2.emit(Client.Events.CONNECTING);\n                            _this2.reconnectDisabled_ = false;\n\n                            setTimeout(function (_) {\n                                debug('Connecting to \"' + _this2.url + '\" ...');\n                                _this2.ws_ = new WebSocket(_this2.url);\n                                _this2.bindEvents_();\n                            }, 0);\n                        }\n                    });\n\n                    return this.connectDeferred_;\n                default:\n                    return Promise.reject(new Error('Could not connect, unknown state.'));\n            }\n        }\n\n        /**\n         * Gracefully closes the connection\n         *\n         * @param {number=} code\n         * @param {any=} reason\n         * @param {boolean=} opt_retry\n         * @returns {Promise}\n         * @example\n         * client\n         *   .disconnect()\n         *   .then(() => {\n         *     // Client will not try to reconnect\n         *     console.log('Disconnected');\n         *   })\n         *   .catch((err) => {\n         *     console.log('Could not disconnect');\n         *   })\n         */\n\n    }, {\n        key: 'disconnect',\n        value: function disconnect(code, reason, opt_retry) {\n            var _this3 = this;\n\n            switch (this.state) {\n                case Client.States.ERROR:\n                case Client.States.CONNECTED:\n                case Client.States.CONNECTING:\n                    debug('Disconnecting...');\n                    this.ws_.close(code || 1000, reason);\n                    debug('Websocket closed!');\n                    this.reconnectDisabled_ = !opt_retry;\n                    this.disconnectDeferred_ = new Deferred();\n                    this.state = Client.States.CLOSING;\n\n                    // Wait \"close\"\" event for some time, manually start onClose procedure\n                    if (this.disconnectTimeout_) clearTimeout(this.disconnectTimeout_);\n                    this.disconnectTimeout_ = setTimeout(function () {\n                        debug('Disconnect timeout exceeded, force disconnecting...');\n                        _this3.onClose(new Error('Disconnect timeout exceeded, force disconnecting...'));\n                        clearTimeout(_this3.disconnectTimeout_);\n                    }, this.disconnectTimeoutDuration_);\n\n                    return this.disconnectDeferred_;\n                case Client.States.CLOSED:\n                    return Promise.reject(new Error('There is no connection to disconnect.'));\n                case Client.States.CLOSING:\n                    return Promise.reject(new Error('Already terminating a connecting, try again later.'));\n            }\n        }\n    }, {\n        key: 'bindEvents_',\n        value: function bindEvents_() {\n            debug('Binding native event handlers.');\n            this.ws_.onopen = this.onOpen.bind(this);\n            this.ws_.onclose = this.onClose.bind(this);\n            this.ws_.onerror = this.onError.bind(this);\n            this.ws_.onmessage = this.onMessage.bind(this);\n        }\n    }, {\n        key: 'unBindEvents_',\n        value: function unBindEvents_() {\n            if (!this.ws_) return;\n            debug('Unbinding native event handlers.');\n            this.ws_.onopen = function () {};\n            this.ws_.onclose = function () {};\n            this.ws_.onerror = function () {};\n            this.ws_.onmessage = function () {};\n        }\n    }, {\n        key: 'disposeConnectionPromisses_',\n        value: function disposeConnectionPromisses_() {\n            debug('Disposing connection promisses...');\n            if (this.connectDeferred_) {\n                debug('Rejecting connect promise...');\n                this.connectDeferred_.reject(this.connectError_);\n                this.connectDeferred_ = null;\n                this.connectError_ = null;\n            }\n\n            if (this.disconnectDeferred_) {\n                debug('Rejecting disconnect promise...');\n                this.disconnectDeferred_.reject();\n                this.disconnectDeferred_ = null;\n            }\n        }\n    }, {\n        key: 'onOpen',\n        value: function onOpen() {\n            var _this4 = this;\n\n            debug('Native \"open\" event received.');\n            debug('State=' + this.state);\n            debug('Sending handshake data...');\n            this.send(Message.Names.HANDSHAKE, this.options.handshakePayload).then(function (data) {\n                debug('Handshake successful.');\n                _this4.id = data.id;\n                _this4.serverTimeout_ = data.timeout;\n                _this4.maxReconnectDelay = data.maxReconnectDelay;\n                _this4.initialReconnectDelay = data.initialReconnectDelay;\n                _this4.reconnectIncrementFactor = data.reconnectIncrementFactor;\n                _this4.pingInterval = data.pingInterval;\n\n                if (_this4.connectDeferred_) {\n                    debug('Resolving connect promise...');\n                    _this4.connectDeferred_.resolve(data.handshakePayload);\n                    _this4.connectDeferred_ = null;\n                    _this4.connectError_ = null;\n                }\n\n                _this4.state = Client.States.CONNECTED;\n                debug('Emitting \"connected\" event...');\n                _this4.emit(Client.Events.CONNECTED, data.handshakePayload);\n            }).catch(function (err) {\n                debug('Handshake failed.');\n                _this4.connectError_ = err;\n                debug('Emitting \"error\" event...');\n                _this4.emit(Client.Events.ERROR, err);\n                return _this4.disconnect();\n            }).catch(function (err) {\n                debug('Could not disconnect after handshake failure.');\n                console.log('Could not disconnect after failed handshake', err);\n            });\n        }\n    }, {\n        key: 'onClose',\n        value: function onClose(err) {\n            var _this5 = this;\n\n            debug('Native \"close\" event reveived.');\n            debug('State=' + this.state);\n            if (this.disconnectTimeout_) clearTimeout(this.disconnectTimeout_);\n            this.unBindEvents_();\n            this.id = null;\n            this.ws_ = null;\n\n            debug('Emitting \"closed\" event...');\n            this.emit(Client.Events.CLOSED, err);\n\n            switch (this.state) {\n                case Client.States.CLOSING:\n                    this.state = Client.States.CLOSED;\n\n                    if (this.disconnectDeferred_) {\n                        debug('Resolving disconnect promise...');\n                        this.disconnectDeferred_.resolve();\n                        this.disconnectDeferred_ = null;\n                    }\n\n                    if (this.connectDeferred_) {\n                        debug('Rejecting connect promise...');\n                        this.connectDeferred_.reject(this.connectError_ || new Error('Connection closed while connecting...'));\n                        this.connectDeferred_ = null;\n                        this.connectError_ = null;\n                    }\n\n                    if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) return;\n\n                    break;\n                case Client.States.CONNECTING:\n                    this.state = Client.States.CLOSED;\n\n                    if (this.disconnectDeferred_) {\n                        debug('Rejecting disconnect promise...');\n                        this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                        this.disconnectDeferred_ = null;\n                    }\n\n                    if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) {\n                        if (this.connectDeferred_) {\n                            debug('Rejecting connect promise...');\n                            this.connectDeferred_.reject(this.connectError_);\n                            this.connectDeferred_ = null;\n                            this.connectError_ = null;\n                        }\n                        return;\n                    }\n\n                    break;\n                default:\n                    this.state = Client.States.CLOSED;\n\n                    if (this.disconnectDeferred_) {\n                        debug('Rejecting disconnect promise...');\n                        this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                        this.disconnectDeferred_ = null;\n                    }\n\n                    if (this.connectDeferred_) {\n                        debug('Rejecting connect promise...');\n                        this.connectDeferred_.reject(new Error('Already connected'));\n                        this.connectDeferred_ = null;\n                        this.connectError_ = null;\n                    }\n\n                    if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) return;\n            }\n            debug('Retrying to connect...');\n            this.retrying_ = true;\n            Utils.retry(function (_) {\n                return _this5.connect();\n            }, {\n                maxCount: this.maxReconnectDelay,\n                initialDelay: this.initialReconnectDelay,\n                increaseFactor: this.reconnectIncrementFactor\n            }).then(function (_) {\n                debug('Retry successful.');\n                _this5.retrying_ = false;\n            });\n        }\n    }, {\n        key: 'onError',\n        value: function onError(err) {\n            debug('Native \"error\" event reveived.');\n            debug('State=' + this.state);\n\n            var eventName = this.state == Client.States.CONNECTING ? Client.Events.CONNECTING_ERROR : Client.Events.ERROR;\n\n            this.emit(eventName, err || new Error('Unknown error'));\n        }\n    }, {\n        key: 'onMessage',\n        value: function onMessage(e) {\n            var _this6 = this;\n\n            debug('Native \"message\" event reveived.');\n\n            var message = Message.parse(e.data);\n            this.autoPing_();\n\n            // Message without response (no id fields)\n            if (!message.id && Message.ReservedNames.indexOf(message.name) == -1) {\n                debug('Message without response: name=\"' + message.name + '\"');\n                return this.emit(message.name, message);\n            }\n\n            // Ping\n            if (message.name == Message.Names.PING) {\n                return this.onPing_(message);\n            }\n\n            // Message response\n            if (message.name == Message.Names.RESPONSE && this.deferreds_[message.id]) {\n                var deferred = this.deferreds_[message.id];\n                debug('Message response: name=\"' + message.name + '\" id=\"' + message.id + '\"');\n                if (message.err) {\n                    var err = Object.assign(new Error(), message.err);\n                    deferred.reject(err);\n                } else {\n                    deferred.resolve(message.payload);\n                }\n\n                delete this.deferreds_[message.id];\n                return;\n            }\n\n            debug('Message with response: name=\"' + message.name + '\" id=\"' + message.id + '\"');\n            // Message with response\n            message.once('resolved', function (payload) {\n                debug('Client resolving: name=\"' + message.name + '\" id=\"' + message.id + '\"');\n                _this6.send_(message.createResponse(null, payload));\n                message.dispose();\n            });\n\n            message.once('rejected', function (err) {\n                if (isObject(err) && err instanceof Error && err.name == 'Error') err = { message: err.message, name: 'Error' };\n                debug('Client rejecting: name=\"' + message.name + '\" id=\"' + message.id + '\"');\n                _this6.send_(message.createResponse(err));\n                message.dispose();\n            });\n\n            this.emit(message.name, message);\n        }\n    }, {\n        key: 'onPing_',\n        value: function onPing_(message) {\n            debug('Ping received');\n            this.send_(message.createResponse(null, 'pong')).catch(function (err) {\n                console.log('Ping responce failed to send', err);\n            });\n        }\n\n        /**\n         * Sends a message to server with awaiting its response.\n         *\n         * @param {string} eventName\n         * @param {any=} payload\n         * @returns {Promise}\n         * @example\n         * client\n         *   .send('hello', {some: data})\n         *   .then((response) => {\n         *     console.log('Sent and got the response');\n         *   })\n         *   .catch((err) => {\n         *     console.log('Could not send message OR server rejected the message');\n         *   });\n         */\n\n    }, {\n        key: 'send',\n        value: function send(eventName, payload) {\n            var _this7 = this;\n\n            var message = new Message({ name: eventName, payload: payload });\n            message.setId();\n\n            return this.send_(message).then(function (_) {\n                var deferred = _this7.deferreds_[message.id] = new Deferred({\n                    onExpire: function onExpire() {\n                        delete _this7.deferreds_[message.id];\n                    },\n                    timeout: _this7.serverTimeout_\n                });\n\n                return deferred;\n            });\n        }\n\n        /**\n         * Sends a message to server without waiting its response.\n         *\n         * @param {string} eventName\n         * @param {any=} payload\n         * @returns {Promise}\n         * @example\n         * client\n         *   .sendWithoutResponse('hello', {some: data})\n         *   .then(() => {\n         *     console.log('Message is sent');\n         *   })\n         *   .catch((err) => {\n         *     console.log('Could not send message');\n         *   });\n         */\n\n    }, {\n        key: 'sendWithoutResponse',\n        value: function sendWithoutResponse(eventName, payload) {\n            var message = new Message({ name: eventName, payload: payload });\n            return this.send_(message);\n        }\n    }, {\n        key: 'send_',\n        value: function send_(message) {\n            var _this8 = this;\n\n            return new Promise(function (resolve) {\n                debug('Sending message: ' + message.toString());\n                _this8.ws_.send(message.toString());\n                resolve();\n            });\n        }\n\n        /**\n         * Sends a ping message to server, if its failed, the connection will be closed.\n         * Server and client ping each other automatically with an interval specified by the server.\n         *\n         * @returns {Promise}\n         */\n\n    }, {\n        key: 'ping',\n        value: function ping() {\n            var _this9 = this;\n\n            var currentSocket = this.ws_;\n\n            debug('Pinging...');\n            return this.send(Message.Names.PING).catch(function (err) {\n                if (_this9.ws_ != currentSocket) {\n                    debug('Auto-ping failed, but socket is also changed, dismissing...');\n                    return;\n                }\n\n                debug('Auto-ping failed, manually disconnecting...');\n                _this9.disconnect(4500, 'Auto ping failed', true);\n                throw err;\n            });\n        }\n    }, {\n        key: 'uptimeTick_',\n        value: function uptimeTick_() {\n            debug('•Uptime Tick•');\n            this.uptimeBuffer_.push(this.state == Client.States.CONNECTED);\n\n            if (this.uptimeBuffer_.length > this.uptimeBufferLength_) {\n                this.uptimeBuffer_.splice(0, this.uptimeBufferLength_ - this.uptimeBuffer_.length);\n            }\n        }\n\n        /**\n         * Calculates (connection) uptime for last 5 minutes with 5 seconds interval.\n         * Returns a number between 0 and 1. If `options.keepUptime` is false, this method\n         * returns null.\n         * @returns {number?}\n         */\n\n    }, {\n        key: 'getUptime',\n        value: function getUptime() {\n            if (!this.options.keepUptime) return null;\n            if (this.uptimeBuffer_.length == 0) return 0;\n            return this.uptimeBuffer_.filter(function (val) {\n                return val;\n            }).length / this.uptimeBuffer_.length;\n        }\n    }, {\n        key: 'dispose',\n        value: function dispose() {\n            debug('Disposing...');\n            this.removeAllListeners();\n            // TODO: Maybe reject all deferreds?\n            this.uptimeBuffer_ = [];\n            if (this.uptimeCheck_) clearInterval(this.uptimeCheck_);\n        }\n    }]);\n\n    return Client;\n}(EventEmitterExtra);\n\n/**\n * @static\n * @readonly\n * @enum {number}\n */\n\n\nClient.States = {\n    /**\n     * `-1`\n     */\n    READY: -1,\n    /**\n     * `0`\n     */\n    CONNECTING: 0,\n    /**\n     * `1`\n     */\n    CONNECTED: 1,\n    /**\n     * `2`\n     */\n    CLOSING: 2,\n    /**\n     * `3`\n     */\n    CLOSED: 3\n};\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\nClient.Events = {\n    /**\n     * `_connecting`\n     */\n    CONNECTING: '_connecting',\n    /**\n     * `_connecting_error`\n     */\n    CONNECTING_ERROR: '_connecting_error',\n    /**\n     * `_connected`\n     */\n    CONNECTED: '_connected',\n    /**\n     * `_closed`\n     */\n    CLOSED: '_closed',\n    /**\n     * `_error`\n     */\n    ERROR: '_error'\n};\n\nmodule.exports = Client;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"uws\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Deferred = function () {\n    function Deferred() {\n        var _this = this;\n\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$handler = _ref.handler,\n            handler = _ref$handler === undefined ? function () {} : _ref$handler,\n            _ref$onExpire = _ref.onExpire,\n            onExpire = _ref$onExpire === undefined ? function () {} : _ref$onExpire,\n            _ref$timeout = _ref.timeout,\n            timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n        _classCallCheck(this, Deferred);\n\n        this.resolve_ = null;\n        this.reject_ = null;\n\n        this.timeout_ = null;\n        this.onExpire_ = onExpire;\n        this.isFinished_ = false;\n\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve_ = resolve;\n            _this.reject_ = reject;\n\n            try {\n                handler(_this);\n            } catch (err) {\n                _this.reject(err);\n            }\n        });\n\n        if (timeout > 0) {\n            this.timeout_ = setTimeout(this.expire.bind(this), timeout);\n        }\n    }\n\n    _createClass(Deferred, [{\n        key: 'resolve',\n        value: function resolve(data) {\n            if (this.isFinished_) return;\n\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.resolve_(data);\n        }\n    }, {\n        key: 'reject',\n        value: function reject(err) {\n            if (this.isFinished_) return;\n\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.reject_(err);\n        }\n    }, {\n        key: 'expire',\n        value: function expire() {\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.onExpire_();\n            this.reject_(new Error('Timeout exceed'));\n        }\n    }, {\n        key: 'then',\n        value: function then() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            return this.promise.then.apply(this.promise, args);\n        }\n    }, {\n        key: 'catch',\n        value: function _catch() {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            return this.promise.catch.apply(this.promise, args);\n        }\n    }, {\n        key: 'clearTimeout_',\n        value: function clearTimeout_() {\n            if (this.timeout_) {\n                clearTimeout(this.timeout_);\n                this.timeout_ = null;\n            }\n        }\n    }]);\n\n    return Deferred;\n}();\n\nmodule.exports = Deferred;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar isUndefined = __webpack_require__(12);\nvar isObject = __webpack_require__(2);\nvar isFunction = __webpack_require__(11);\nvar values = __webpack_require__(13);\n\nvar _require = __webpack_require__(0),\n    generateDummyId = _require.generateDummyId;\n\nvar EventEmitterExtra = __webpack_require__(1);\n\n/**\n * Message class.\n *\n * @private\n * @class Message\n * @extends {EventEmitterExtra}\n * @property {string} name Event name\n * @property {?any} payload Message payload.\n */\n\nvar Message = function (_EventEmitterExtra) {\n    _inherits(Message, _EventEmitterExtra);\n\n    _createClass(Message, null, [{\n        key: 'parse',\n        value: function parse(raw) {\n            try {\n                var data = JSON.parse(raw);\n                return new Message({\n                    name: data.n,\n                    payload: data.p,\n                    err: data.e,\n                    id: data.i\n                });\n            } catch (err) {\n                throw new Error('Could not parse message.');\n            }\n        }\n    }]);\n\n    function Message(_ref) {\n        var name = _ref.name,\n            payload = _ref.payload,\n            id = _ref.id,\n            err = _ref.err;\n\n        _classCallCheck(this, Message);\n\n        var _this = _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).call(this));\n\n        _this.name = name;\n        _this.payload = payload;\n        _this.id = id;\n        _this.err = err;\n\n        _this.isResponded_ = false;\n        return _this;\n    }\n\n    _createClass(Message, [{\n        key: 'setId',\n        value: function setId() {\n            var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : generateDummyId();\n\n            this.id = id;\n            return id;\n        }\n    }, {\n        key: 'createResponse',\n        value: function createResponse(err, payload) {\n            return new Message({ name: '_r', payload: payload, err: err, id: this.id });\n        }\n\n        /**\n         * Resolves the message with sending a response back. If event source\n         * does not expecting a response, you don't need to call these methods.\n         * @param {any=} payload\n         */\n\n    }, {\n        key: 'resolve',\n        value: function resolve(payload) {\n            var _this2 = this;\n\n            if (isUndefined(this.id)) return console.warn('[line] A message without an id cannot be resolved.');\n\n            if (this.isResponded_) return console.warn('[line] This message has already been ended.');\n\n            // If thenable\n            if (isObject(payload) && isFunction(payload.then)) {\n                payload.then(function (response) {\n                    _this2.isResponded_ = true;\n                    _this2.emit('resolved', payload);\n                }).catch(function (err) {\n                    _this2.isResponded_ = true;\n                    _this2.emit('rejected', err);\n                });\n\n                return;\n            }\n\n            this.isResponded_ = true;\n            this.emit('resolved', payload);\n        }\n\n        /**\n         * Rejects the message, with sending error response back to event source.\n         * @param {any=} err\n         */\n\n    }, {\n        key: 'reject',\n        value: function reject(err) {\n            if (isUndefined(this.id)) return console.warn('[line] A message without an id cannot be rejected.');\n\n            if (this.isResponded_) return console.warn('[line] This message has already been ended.');\n\n            this.isResponded_ = true;\n            this.emit('rejected', err);\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            try {\n                var data = { n: this.name };\n\n                if (!isUndefined(this.payload)) data.p = this.payload;\n\n                if (!isUndefined(this.id)) data.i = this.id;\n\n                if (!isUndefined(this.err)) data.e = this.err;\n\n                return JSON.stringify(data);\n            } catch (err) {\n                throw new Error('Could not stringify message.');\n            }\n        }\n    }, {\n        key: 'dispose',\n        value: function dispose() {\n            var _this3 = this;\n\n            var events = this.eventNames();\n            events.forEach(function (event) {\n                return _this3.removeAllListeners(event);\n            });\n        }\n    }]);\n\n    return Message;\n}(EventEmitterExtra);\n\nMessage.Names = {\n    RESPONSE: '_r',\n    HANDSHAKE: '_h',\n    PING: '_p'\n};\n\nMessage.ReservedNames = values(Message.Names);\n\nmodule.exports = Message;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"debug\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/assign\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/debounce\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isBoolean\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isFunction\");\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isUndefined\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/values\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nglobal.WebSocket = __webpack_require__(4);\nvar WebClient = __webpack_require__(3);\n\nvar NodeClient = function (_WebClient) {\n    _inherits(NodeClient, _WebClient);\n\n    function NodeClient() {\n        _classCallCheck(this, NodeClient);\n\n        return _possibleConstructorReturn(this, (NodeClient.__proto__ || Object.getPrototypeOf(NodeClient)).apply(this, arguments));\n    }\n\n    _createClass(NodeClient, [{\n        key: 'bindEvents_',\n        value: function bindEvents_() {\n            var _this2 = this;\n\n            this.ws_.on('open', this.onOpen.bind(this));\n            this.ws_.on('error', this.onError.bind(this));\n\n            this.ws_.on('close', function (code, reason) {\n                if (code == 0) code = 1005;\n                _this2.onClose({ code: code, reason: reason });\n            });\n\n            this.ws_.on('message', function (data) {\n                _this2.onMessage({ data: data });\n            });\n        }\n    }, {\n        key: 'send_',\n        value: function send_(message) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this3.ws_.send(message.toString(), function (err) {\n                    if (err) return reject(err);\n                    resolve();\n                });\n            });\n        }\n    }, {\n        key: 'onError',\n        value: function onError(err) {\n            var _this4 = this;\n\n            if (!err) err = { code: 1006, reason: '' };\n\n            _get(NodeClient.prototype.__proto__ || Object.getPrototypeOf(NodeClient.prototype), 'onError', this).call(this);\n\n            /* Work-around for node; onClose not being called after error */\n            setTimeout(function (_) {\n                return _this4.onClose(err);\n            });\n        }\n    }]);\n\n    return NodeClient;\n}(WebClient);\n\nmodule.exports = NodeClient;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// client-node.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 39f30ec94b4c852f1891","const assign = require('lodash/assign');\n\n\nfunction promiseDelay(ms) {\n    return new Promise(resolve => setTimeout(_ => resolve(), ms))\n}\n\n\nfunction retry(task, options = {}) {\n    const defaults = {maxDelay: 160, maxCount: 0, initialDelay: 3, increaseFactor: 2};\n    options = assign(defaults, options);\n    let timeout;\n    let counter = 1;\n    let delay = options.initialDelay;\n\n    const once = function() {\n        return task()\n            .catch(err => {\n                counter++;\n                delay = delay * options.increaseFactor;\n\n                if (options.maxCount != 0 && counter > options.maxCount) {\n                    timeout && clearTimeout(timeout);\n                    throw err;\n                }\n                return promiseDelay(delay * 1000 / 2).then(_ => once());\n            });\n    }\n\n    return once();\n}\n\n\n// http://stackoverflow.com/a/6248722\nfunction generateDummyId(length = 4) {\n    return (\"0000\" + (Math.random()*Math.pow(36,length) << 0).toString(36)).slice(-length);\n}\n\n\nmodule.exports = {promiseDelay, retry, generateDummyId};\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils.js","module.exports = require(\"event-emitter-extra/dist/commonjs.modern\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"event-emitter-extra/dist/commonjs.modern\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"lodash/isObject\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isObject\"\n// module id = 2\n// module chunks = 0","const Message = require('../lib/message');\nconst Utils = require('../lib/utils');\nconst EventEmitterExtra = require('event-emitter-extra/dist/commonjs.modern');\nconst Deferred = require('../lib/deferred');\nconst debounce = require('lodash/debounce');\nconst isObject = require('lodash/isObject');\nconst isBoolean = require('lodash/isBoolean');\nconst debug = require('debug')('line:client-web');\n\n\n\n/**\n * Line client class.\n *\n * @class Client\n * @extends {EventEmitterExtra}\n * @param {string=} url Server url, default: `ws://localhost`.\n * @param {Object=} options Options object.\n * @param {boolean=} options.reconnect Try to reconnect server after unexpected disconnection, default `true`.\n * @param {boolean=} options.keepUptime Keeps uptime, default `false`.\n * @param {any=} options.handshakePayload Handshake payload to be sent to server.\n * @property {string} url Server url\n * @property {string} id Unique connection id assigned by the server\n * @property {Client.States} state Connection state\n * @example\n * // Add line-client to your html document\n * <script src=\"./node_modules/line-socket/dist/client-web-globals.js\"></script>\n *\n * // For web browsers (consuming as a commonjs module)\n * const LineClient = require('line-socket/client-web');\n *\n * // For node.js\n * const LineClient = require('line-socket/client-node');\n *\n *\n * const client = new LineClient('ws://localhost:8080', {\n *   reconnect: false,\n *   handshakePayload: { token: 'a6g3X' }\n * });\n */\nclass Client extends EventEmitterExtra {\n    constructor(url = 'ws://localhost', options = {}) {\n        super();\n\n        this.url = url;\n\n        this.options = options;\n\n        this.ws_ = null;\n        this.id = null;\n        this.reconnect = isBoolean(options.reconnect) ? options.reconnect : true;\n        this.reconnectDisabled_ = false;\n\n        this.serverTimeout_ = 10000;\n        this.maxReconnectDelay = 60;\n        this.initialReconnectDelay = 1;\n        this.reconnectIncrementFactor = 1.5;\n        this.pingInterval = 30000;\n\n        this.deferreds_ = {};\n        this.connectDeferred_ = null;\n        this.connectError_ = null;\n        this.disconnectDeferred_ = null;\n        this.disconnectTimeoutDuration_ = 30000;\n        this.disconnectTimeout_ = null;\n\n\n        this.state = Client.States.READY;\n\n        this.uptimeInterval_ = 5000;\n        this.uptimeBuffer_ = [];\n        this.uptimeBufferLength_ = 5 * 60000 / this.uptimeInterval_;\n        this.uptimeCheck_ = options.keepUptime ? setInterval(this.uptimeTick_.bind(this), this.uptimeInterval_) : null;\n\n        this.autoPing_ = this.pingInterval > 0 ?\n            debounce(() => {\n                if (this.state != Client.States.CONNECTED)\n                    return;\n\n                this\n                    .ping()\n                    .then(() => {\n                        if (this.pingInterval > 0 && this.state == Client.States.CONNECTED) {\n                            this.autoPing_();\n                        }\n                    })\n                    .catch(() => {});\n            }, this.pingInterval) :\n            () => {};\n    }\n\n\n    /**\n     * Connects to server.\n     * @returns {Promise}\n     * @example\n     * client\n     *   .connect()\n     *   .then((handshakeResponse) => {\n     *     // handshakeResponse will be undefined if you do not resolve\n     *     // the handshake with a payload in server\n     *     console.log('Connected');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not connect');\n     *   })\n     */\n    connect() {\n        switch (this.state) {\n            case Client.States.CONNECTING:\n                return Promise.reject(new Error('Could not connect, already trying to connect to a host...'));\n            case Client.States.CONNECTED:\n                return Promise.reject(new Error('Already connected.'));\n            case Client.States.CLOSING:\n                return Promise.reject(new Error('Terminating an active connecting, try again later.'));\n            case Client.States.CLOSED:\n            case Client.States.READY:\n                this.connectError_ = null;\n                this.connectDeferred_ = new Deferred({\n                    handler: () => {\n                        this.state = Client.States.CONNECTING;\n                        this.emit(Client.Events.CONNECTING);\n                        this.reconnectDisabled_ = false;\n\n                        setTimeout(_ => {\n                            debug(`Connecting to \"${this.url}\" ...`);\n                            this.ws_ = new WebSocket(this.url);\n                            this.bindEvents_();\n                        }, 0);\n                    }\n                });\n\n                return this.connectDeferred_;\n            default:\n                return Promise.reject(new Error('Could not connect, unknown state.'))\n        }\n    }\n\n\n    /**\n     * Gracefully closes the connection\n     *\n     * @param {number=} code\n     * @param {any=} reason\n     * @param {boolean=} opt_retry\n     * @returns {Promise}\n     * @example\n     * client\n     *   .disconnect()\n     *   .then(() => {\n     *     // Client will not try to reconnect\n     *     console.log('Disconnected');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not disconnect');\n     *   })\n     */\n    disconnect(code, reason, opt_retry) {\n        switch (this.state) {\n            case Client.States.ERROR:\n            case Client.States.CONNECTED:\n            case Client.States.CONNECTING:\n                debug('Disconnecting...');\n                this.ws_.close(code || 1000, reason);\n                debug('Websocket closed!');\n                this.reconnectDisabled_ = !opt_retry;\n                this.disconnectDeferred_ = new Deferred();\n                this.state = Client.States.CLOSING;\n\n                // Wait \"close\"\" event for some time, manually start onClose procedure\n                if (this.disconnectTimeout_) clearTimeout(this.disconnectTimeout_);\n                this.disconnectTimeout_ = setTimeout(() => {\n                    debug(`Disconnect timeout exceeded, force disconnecting...`);\n                    this.onClose(new Error(`Disconnect timeout exceeded, force disconnecting...`));\n                    clearTimeout(this.disconnectTimeout_);\n                }, this.disconnectTimeoutDuration_);\n\n                return this.disconnectDeferred_;\n            case Client.States.CLOSED:\n                return Promise.reject(new Error('There is no connection to disconnect.'));\n            case Client.States.CLOSING:\n                return Promise.reject(new Error('Already terminating a connecting, try again later.'));\n        }\n    }\n\n\n    bindEvents_() {\n        debug('Binding native event handlers.');\n        this.ws_.onopen = this.onOpen.bind(this);\n        this.ws_.onclose = this.onClose.bind(this);\n        this.ws_.onerror = this.onError.bind(this);\n        this.ws_.onmessage = this.onMessage.bind(this);\n    }\n\n\n    unBindEvents_() {\n        if (!this.ws_) return;\n        debug('Unbinding native event handlers.');\n        this.ws_.onopen = function() {};\n        this.ws_.onclose = function() {};\n        this.ws_.onerror = function() {};\n        this.ws_.onmessage = function() {};\n    }\n\n\n    disposeConnectionPromisses_() {\n        debug('Disposing connection promisses...');\n        if (this.connectDeferred_) {\n            debug('Rejecting connect promise...');\n            this.connectDeferred_.reject(this.connectError_);\n            this.connectDeferred_ = null;\n            this.connectError_ = null;\n        }\n\n        if (this.disconnectDeferred_) {\n            debug('Rejecting disconnect promise...');\n            this.disconnectDeferred_.reject();\n            this.disconnectDeferred_ = null;\n        }\n    }\n\n\n    onOpen() {\n        debug('Native \"open\" event received.');\n        debug(`State=${this.state}`);\n        debug('Sending handshake data...');\n        this.send(Message.Names.HANDSHAKE, this.options.handshakePayload)\n            .then(data => {\n                debug('Handshake successful.');\n                this.id = data.id;\n                this.serverTimeout_ = data.timeout;\n                this.maxReconnectDelay = data.maxReconnectDelay;\n                this.initialReconnectDelay = data.initialReconnectDelay;\n                this.reconnectIncrementFactor = data.reconnectIncrementFactor;\n                this.pingInterval = data.pingInterval;\n\n                if (this.connectDeferred_) {\n                    debug('Resolving connect promise...');\n                    this.connectDeferred_.resolve(data.handshakePayload);\n                    this.connectDeferred_ = null;\n                    this.connectError_ = null;\n                }\n\n                this.state = Client.States.CONNECTED;\n                debug('Emitting \"connected\" event...');\n                this.emit(Client.Events.CONNECTED, data.handshakePayload);\n            })\n            .catch(err => {\n                debug('Handshake failed.');\n                this.connectError_ = err;\n                debug('Emitting \"error\" event...');\n                this.emit(Client.Events.ERROR, err);\n                return this.disconnect();\n            })\n            .catch(err => {\n                debug('Could not disconnect after handshake failure.');\n                console.log('Could not disconnect after failed handshake', err);\n            });\n    }\n\n\n    onClose(err) {\n        debug('Native \"close\" event reveived.');\n        debug(`State=${this.state}`);\n        if (this.disconnectTimeout_) clearTimeout(this.disconnectTimeout_);\n        this.unBindEvents_();\n        this.id = null;\n        this.ws_ = null;\n\n        debug('Emitting \"closed\" event...');\n        this.emit(Client.Events.CLOSED, err);\n\n        switch(this.state) {\n            case Client.States.CLOSING:\n                this.state = Client.States.CLOSED;\n\n                if (this.disconnectDeferred_) {\n                    debug('Resolving disconnect promise...');\n                    this.disconnectDeferred_.resolve();\n                    this.disconnectDeferred_ = null;\n                }\n\n                if (this.connectDeferred_) {\n                    debug('Rejecting connect promise...');\n                    this.connectDeferred_.reject(this.connectError_ || new Error('Connection closed while connecting...'));\n                    this.connectDeferred_ = null;\n                    this.connectError_ = null;\n                }\n\n                if (!this.reconnect || this.retrying_ || this.reconnectDisabled_)\n                    return;\n\n                break;\n            case Client.States.CONNECTING:\n                this.state = Client.States.CLOSED;\n\n                if (this.disconnectDeferred_) {\n                    debug('Rejecting disconnect promise...');\n                    this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                    this.disconnectDeferred_ = null;\n                }\n\n                if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) {\n                    if (this.connectDeferred_) {\n                        debug('Rejecting connect promise...');\n                        this.connectDeferred_.reject(this.connectError_);\n                        this.connectDeferred_ = null;\n                        this.connectError_ = null;\n                    }\n                    return;\n                }\n\n                break;\n            default:\n                this.state = Client.States.CLOSED;\n\n                if (this.disconnectDeferred_) {\n                    debug('Rejecting disconnect promise...');\n                    this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                    this.disconnectDeferred_ = null;\n                }\n\n                if (this.connectDeferred_) {\n                    debug('Rejecting connect promise...');\n                    this.connectDeferred_.reject(new Error('Already connected'));\n                    this.connectDeferred_ = null;\n                    this.connectError_ = null;\n                }\n\n                if (!this.reconnect || this.retrying_ || this.reconnectDisabled_)\n                    return;\n        }\n        debug('Retrying to connect...');\n        this.retrying_ = true;\n        Utils\n            .retry(\n                _ => this.connect(),\n                {\n                    maxCount: this.maxReconnectDelay,\n                    initialDelay: this.initialReconnectDelay,\n                    increaseFactor: this.reconnectIncrementFactor\n                })\n            .then(_ => {\n                debug('Retry successful.');\n                this.retrying_ = false;\n            });\n    }\n\n\n    onError(err) {\n        debug('Native \"error\" event reveived.');\n        debug(`State=${this.state}`);\n\n        const eventName = this.state == Client.States.CONNECTING ?\n                Client.Events.CONNECTING_ERROR : Client.Events.ERROR;\n\n        this.emit(eventName, err || new Error('Unknown error'));\n    }\n\n\n    onMessage(e) {\n        debug('Native \"message\" event reveived.');\n\n        const message = Message.parse(e.data);\n        this.autoPing_();\n\n        // Message without response (no id fields)\n        if (!message.id && Message.ReservedNames.indexOf(message.name) == -1) {\n            debug(`Message without response: name=\"${message.name}\"`);\n            return this.emit(message.name, message);\n        }\n\n        // Ping\n        if (message.name == Message.Names.PING) {\n            return this.onPing_(message);\n        }\n\n        // Message response\n        if (message.name == Message.Names.RESPONSE && this.deferreds_[message.id]) {\n            const deferred = this.deferreds_[message.id];\n            debug(`Message response: name=\"${message.name}\" id=\"${message.id}\"`);\n            if (message.err) {\n                const err = Object.assign(new Error(), message.err);\n                deferred.reject(err);\n            } else {\n                deferred.resolve(message.payload);\n            }\n\n            delete this.deferreds_[message.id];\n            return;\n        }\n\n        debug(`Message with response: name=\"${message.name}\" id=\"${message.id}\"`);\n        // Message with response\n        message.once('resolved', payload => {\n            debug(`Client resolving: name=\"${message.name}\" id=\"${message.id}\"`);\n            this.send_(message.createResponse(null, payload));\n            message.dispose();\n        });\n\n        message.once('rejected', err => {\n            if (isObject(err) && err instanceof Error && err.name == 'Error')\n               err = {message: err.message, name: 'Error'};\n            debug(`Client rejecting: name=\"${message.name}\" id=\"${message.id}\"`);\n            this.send_(message.createResponse(err));\n            message.dispose();\n        });\n\n        this.emit(message.name, message);\n    }\n\n\n    onPing_(message) {\n        debug('Ping received');\n        this\n            .send_(message.createResponse(null, 'pong'))\n            .catch(err => {\n                console.log('Ping responce failed to send', err);\n            });\n    }\n\n\n    /**\n     * Sends a message to server with awaiting its response.\n     *\n     * @param {string} eventName\n     * @param {any=} payload\n     * @returns {Promise}\n     * @example\n     * client\n     *   .send('hello', {some: data})\n     *   .then((response) => {\n     *     console.log('Sent and got the response');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not send message OR server rejected the message');\n     *   });\n     */\n    send(eventName, payload) {\n        const message = new Message({name: eventName, payload});\n        message.setId();\n\n        return this\n            .send_(message)\n            .then(_ => {\n                const deferred = this.deferreds_[message.id] = new Deferred({\n                    onExpire: () => {\n                        delete this.deferreds_[message.id];\n                    },\n                    timeout: this.serverTimeout_\n                });\n\n                return deferred;\n            });\n    }\n\n\n    /**\n     * Sends a message to server without waiting its response.\n     *\n     * @param {string} eventName\n     * @param {any=} payload\n     * @returns {Promise}\n     * @example\n     * client\n     *   .sendWithoutResponse('hello', {some: data})\n     *   .then(() => {\n     *     console.log('Message is sent');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not send message');\n     *   });\n     */\n    sendWithoutResponse(eventName, payload) {\n        const message = new Message({name: eventName, payload});\n        return this.send_(message);\n    }\n\n\n    send_(message) {\n        return new Promise(resolve => {\n            debug(`Sending message: ${message.toString()}`);\n            this.ws_.send(message.toString());\n            resolve();\n        });\n    }\n\n\n    /**\n     * Sends a ping message to server, if its failed, the connection will be closed.\n     * Server and client ping each other automatically with an interval specified by the server.\n     *\n     * @returns {Promise}\n     */\n    ping() {\n        const currentSocket = this.ws_;\n\n        debug('Pinging...');\n        return this\n            .send(Message.Names.PING)\n            .catch(err => {\n                if (this.ws_ != currentSocket) {\n                    debug('Auto-ping failed, but socket is also changed, dismissing...');\n                    return;\n                }\n\n                debug('Auto-ping failed, manually disconnecting...');\n                this.disconnect(4500, 'Auto ping failed', true);\n                throw err;\n            });\n    }\n\n\n    uptimeTick_() {\n        debug('•Uptime Tick•');\n        this.uptimeBuffer_.push(this.state == Client.States.CONNECTED);\n\n        if (this.uptimeBuffer_.length > this.uptimeBufferLength_) {\n            this.uptimeBuffer_.splice(0, this.uptimeBufferLength_ - this.uptimeBuffer_.length);\n        }\n    }\n\n\n    /**\n     * Calculates (connection) uptime for last 5 minutes with 5 seconds interval.\n     * Returns a number between 0 and 1. If `options.keepUptime` is false, this method\n     * returns null.\n     * @returns {number?}\n     */\n    getUptime() {\n        if (!this.options.keepUptime) return null;\n        if (this.uptimeBuffer_.length == 0) return 0;\n        return this.uptimeBuffer_.filter(val => val).length / this.uptimeBuffer_.length;\n    }\n\n\n    dispose() {\n        debug('Disposing...');\n        this.removeAllListeners();\n        // TODO: Maybe reject all deferreds?\n        this.uptimeBuffer_ = [];\n        if (this.uptimeCheck_) clearInterval(this.uptimeCheck_);\n    }\n}\n\n\n/**\n * @static\n * @readonly\n * @enum {number}\n */\nClient.States = {\n    /**\n     * `-1`\n     */\n    READY: -1,\n    /**\n     * `0`\n     */\n    CONNECTING: 0,\n    /**\n     * `1`\n     */\n    CONNECTED: 1,\n    /**\n     * `2`\n     */\n    CLOSING: 2,\n    /**\n     * `3`\n     */\n    CLOSED: 3\n};\n\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\nClient.Events = {\n    /**\n     * `_connecting`\n     */\n    CONNECTING: '_connecting',\n    /**\n     * `_connecting_error`\n     */\n    CONNECTING_ERROR: '_connecting_error',\n    /**\n     * `_connected`\n     */\n    CONNECTED: '_connected',\n    /**\n     * `_closed`\n     */\n    CLOSED: '_closed',\n    /**\n     * `_error`\n     */\n    ERROR: '_error'\n};\n\n\nmodule.exports = Client;\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/client-web.js","module.exports = require(\"uws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uws\"\n// module id = 4\n// module chunks = 0","class Deferred {\n    constructor({\n        handler = () => {},\n        onExpire = () => {},\n        timeout = 0\n    } = {}) {\n        this.resolve_ = null;\n        this.reject_ = null;\n\n        this.timeout_ = null;\n        this.onExpire_ = onExpire;\n        this.isFinished_ = false;\n\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve_ = resolve;\n            this.reject_ = reject;\n\n            try {\n                handler(this);\n            } catch (err) {\n                this.reject(err);\n            }\n        });\n\n        if (timeout > 0) {\n            this.timeout_ = setTimeout(this.expire.bind(this), timeout);\n        }\n    }\n\n\n    resolve(data) {\n        if (this.isFinished_) return;\n\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.resolve_(data);\n    }\n\n\n    reject(err) {\n        if (this.isFinished_) return;\n\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.reject_(err);\n    }\n\n\n    expire() {\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.onExpire_();\n        this.reject_(new Error('Timeout exceed'));\n    }\n\n\n    then(...args) {\n        return this.promise.then.apply(this.promise, args);\n    }\n\n\n    catch(...args) {\n        return this.promise.catch.apply(this.promise, args);\n    }\n\n\n    clearTimeout_() {\n        if (this.timeout_) {\n            clearTimeout(this.timeout_);\n            this.timeout_ = null;\n        }\n    }\n}\n\n\nmodule.exports = Deferred;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/deferred.js","const isUndefined = require('lodash/isUndefined');\nconst isObject = require('lodash/isObject');\nconst isFunction = require('lodash/isFunction');\nconst values = require('lodash/values');\nconst {generateDummyId} = require('./utils');\nconst EventEmitterExtra = require('event-emitter-extra/dist/commonjs.modern');\n\n\n/**\n * Message class.\n *\n * @private\n * @class Message\n * @extends {EventEmitterExtra}\n * @property {string} name Event name\n * @property {?any} payload Message payload.\n */\nclass Message extends EventEmitterExtra {\n    static parse(raw) {\n        try {\n            const data = JSON.parse(raw);\n            return new Message({\n                name: data.n,\n                payload: data.p,\n                err: data.e,\n                id: data.i\n            });\n        } catch(err) {\n            throw new Error(`Could not parse message.`);\n        }\n    }\n\n    constructor({name, payload, id, err}) {\n        super();\n\n        this.name = name;\n        this.payload = payload;\n        this.id = id;\n        this.err = err;\n\n        this.isResponded_ = false;\n    }\n\n    setId(id = generateDummyId()) {\n        this.id = id;\n        return id;\n    }\n\n    createResponse(err, payload) {\n        return new Message({name: '_r', payload, err, id: this.id});\n    }\n\n\n    /**\n     * Resolves the message with sending a response back. If event source\n     * does not expecting a response, you don't need to call these methods.\n     * @param {any=} payload\n     */\n    resolve(payload) {\n        if (isUndefined(this.id))\n            return console.warn('[line] A message without an id cannot be resolved.');\n\n        if (this.isResponded_)\n            return console.warn('[line] This message has already been ended.');\n\n        // If thenable\n        if (isObject(payload) && isFunction(payload.then)) {\n            payload\n                .then(response => {\n                    this.isResponded_ = true;\n                    this.emit('resolved', payload);\n                })\n                .catch(err => {\n                    this.isResponded_ = true;\n                    this.emit('rejected', err);\n                });\n\n            return;\n        }\n\n        this.isResponded_ = true;\n        this.emit('resolved', payload);\n    }\n\n\n    /**\n     * Rejects the message, with sending error response back to event source.\n     * @param {any=} err\n     */\n    reject(err) {\n        if (isUndefined(this.id))\n            return console.warn('[line] A message without an id cannot be rejected.');\n\n        if (this.isResponded_)\n            return console.warn('[line] This message has already been ended.');\n\n        this.isResponded_ = true;\n        this.emit('rejected', err);\n    }\n\n    toString() {\n        try {\n            const data = {n: this.name};\n\n            if (!isUndefined(this.payload))\n                data.p = this.payload;\n\n            if (!isUndefined(this.id))\n                data.i = this.id;\n\n            if (!isUndefined(this.err))\n                data.e = this.err;\n\n            return JSON.stringify(data);\n        } catch(err) {\n            throw new Error(`Could not stringify message.`);\n        }\n    }\n\n    dispose() {\n        const events = this.eventNames();\n        events.forEach(event => this.removeAllListeners(event));\n    }\n}\n\n\nMessage.Names = {\n    RESPONSE: '_r',\n    HANDSHAKE: '_h',\n    PING: '_p'\n};\n\n\nMessage.ReservedNames = values(Message.Names);\n\n\nmodule.exports = Message;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/message.js","module.exports = require(\"debug\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"lodash/assign\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/assign\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"lodash/debounce\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/debounce\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"lodash/isBoolean\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isBoolean\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"lodash/isFunction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isFunction\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"lodash/isUndefined\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isUndefined\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"lodash/values\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/values\"\n// module id = 13\n// module chunks = 0","global.WebSocket = require('uws');\nconst WebClient = require('./client-web');\n\n\nclass NodeClient extends WebClient {\n    bindEvents_() {\n        this.ws_.on('open', this.onOpen.bind(this));\n        this.ws_.on('error', this.onError.bind(this));\n\n        this.ws_.on('close', (code, reason) => {\n            if (code == 0) code = 1005;\n            this.onClose({code, reason});\n        });\n\n        this.ws_.on('message', (data) => {\n            this.onMessage({data});\n        });\n    }\n\n\n    send_(message) {\n        return new Promise((resolve, reject) => {\n            this.ws_.send(message.toString(), err => {\n                if (err) return reject(err);\n                resolve();\n            });\n        });\n    }\n\n\n    onError(err) {\n        if (!err) err = {code: 1006, reason: ''};\n\n        super.onError();\n\n        /* Work-around for node; onClose not being called after error */\n        setTimeout(_ => this.onClose(err));\n    }\n\n}\n\n\nmodule.exports = NodeClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/client-node.js"],"sourceRoot":""}