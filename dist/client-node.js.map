{"version":3,"sources":["webpack:///client-node.js","webpack:///webpack/bootstrap 776772322c229edbcae4","webpack:///./src/lib/utils.js","webpack:///external \"event-emitter-extra/dist/commonjs.modern\"","webpack:///external \"lodash/isObject\"","webpack:///./src/client/client-web.js","webpack:///external \"uws\"","webpack:///./src/lib/deferred.js","webpack:///./src/lib/message.js","webpack:///external \"lodash/assign\"","webpack:///external \"lodash/debounce\"","webpack:///external \"lodash/isBoolean\"","webpack:///external \"lodash/isFunction\"","webpack:///external \"lodash/isUndefined\"","webpack:///external \"lodash/values\"","webpack:///./src/client/client-node.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","promiseDelay","ms","Promise","resolve","setTimeout","_","retry","task","options","arguments","length","undefined","defaults","maxDelay","maxCount","initialDelay","increaseFactor","assign","timeout","counter","delay","once","catch","err","clearTimeout","then","generateDummyId","Math","random","pow","toString","slice","require","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","Message","Utils","EventEmitterExtra","Deferred","debounce","isObject","isBoolean","Client","_EventEmitterExtra","url","this","_this","getPrototypeOf","ws_","id","reconnect","reconnectDisabled_","serverTimeout_","maxReconnectDelay","initialReconnectDelay","reconnectIncrementFactor","pingInterval","deferreds_","connectDeferred_","connectError_","disconnectDeferred_","state","States","READY","uptimeInterval_","uptimeBuffer_","uptimeBufferLength_","uptimeCheck_","keepUptime","setInterval","uptimeTick_","bind","autoPing_","CONNECTED","ping","_this2","CONNECTING","reject","Error","CLOSING","CLOSED","handler","emit","Events","WebSocket","bindEvents_","code","reason","opt_retry","ERROR","close","onopen","onOpen","onclose","onClose","onerror","onError","onmessage","onMessage","_this3","send","Names","HANDSHAKE","handshakePayload","data","disconnect","console","log","_this4","unBindEvents_","retrying_","connect","eventName","CONNECTING_ERROR","e","_this5","message","parse","ReservedNames","indexOf","PING","onPing_","RESPONSE","deferred","payload","send_","createResponse","dispose","_this6","setId","onExpire","_this7","_this8","push","splice","filter","val","removeAllListeners","clearInterval","_ref","_ref$handler","_ref$onExpire","_ref$timeout","resolve_","reject_","timeout_","onExpire_","isFinished_","promise","expire","clearTimeout_","_len","args","Array","_key","apply","_len2","_key2","isUndefined","isFunction","values","_require","isResponded_","raw","JSON","warn","response","stringify","events","eventNames","forEach","event","_get","receiver","Function","desc","getOwnPropertyDescriptor","parent","global","WebClient","NodeClient","_WebClient","on"],"mappings":"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","file":"client-node.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\n\nvar assign = __webpack_require__(7);\n\nfunction promiseDelay(ms) {\n    return new Promise(function (resolve) {\n        return setTimeout(function (_) {\n            return resolve();\n        }, ms);\n    });\n}\n\nfunction retry(task) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var defaults = { maxDelay: 160, maxCount: 0, initialDelay: 3, increaseFactor: 2 };\n    options = assign(defaults, options);\n    var timeout = void 0;\n    var counter = 1;\n    var delay = options.initialDelay;\n\n    var once = function once() {\n        return task().catch(function (err) {\n            counter++;\n            delay = delay * options.increaseFactor;\n\n            if (options.maxCount != 0 && counter > options.maxCount) {\n                timeout && clearTimeout(timeout);\n                throw err;\n            }\n            return promiseDelay(delay * 1000 / 2).then(function (_) {\n                return once();\n            });\n        });\n    };\n\n    return once();\n}\n\n// http://stackoverflow.com/a/6248722\nfunction generateDummyId() {\n    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4;\n\n    return (\"0000\" + (Math.random() * Math.pow(36, length) << 0).toString(36)).slice(-length);\n}\n\nmodule.exports = { promiseDelay: promiseDelay, retry: retry, generateDummyId: generateDummyId };\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"event-emitter-extra/dist/commonjs.modern\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isObject\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Message = __webpack_require__(6);\nvar Utils = __webpack_require__(0);\nvar EventEmitterExtra = __webpack_require__(1);\nvar Deferred = __webpack_require__(5);\nvar debounce = __webpack_require__(8);\nvar isObject = __webpack_require__(2);\nvar isBoolean = __webpack_require__(9);\n\n/**\n * Line client class.\n *\n * @class Client\n * @extends {EventEmitterExtra}\n * @param {string=} url Server url, default: `ws://localhost`.\n * @param {Object=} options Options object.\n * @param {boolean=} options.reconnect Try to reconnect server after unexpected disconnection, default `true`.\n * @param {boolean=} options.keepUptime Keeps uptime, default `false`.\n * @param {any=} options.handshakePayload Handshake payload to be sent to server.\n * @property {string} url Server url\n * @property {string} id Unique connection id assigned by the server\n * @property {Client.States} state Connection state\n * @example\n * // Add line-client to your html document\n * <script src=\"./node_modules/line-socket/dist/client-web-globals.js\"></script>\n *\n * // For web browsers (consuming as a commonjs module)\n * const LineClient = require('line-socket/client-web');\n *\n * // For node.js\n * const LineClient = require('line-socket/client-node');\n *\n *\n * const client = new LineClient('ws://localhost:8080', {\n *   reconnect: false,\n *   handshakePayload: { token: 'a6g3X' }\n * });\n */\n\nvar Client = function (_EventEmitterExtra) {\n    _inherits(Client, _EventEmitterExtra);\n\n    function Client() {\n        var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ws://localhost';\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, Client);\n\n        var _this = _possibleConstructorReturn(this, (Client.__proto__ || Object.getPrototypeOf(Client)).call(this));\n\n        _this.url = url;\n\n        _this.options = options;\n\n        _this.ws_ = null;\n        _this.id = null;\n        _this.reconnect = isBoolean(options.reconnect) ? options.reconnect : true;\n        _this.reconnectDisabled_ = false;\n\n        _this.serverTimeout_ = 30000;\n        _this.maxReconnectDelay = 60;\n        _this.initialReconnectDelay = 1;\n        _this.reconnectIncrementFactor = 2;\n        _this.pingInterval = 60000;\n\n        _this.deferreds_ = {};\n        _this.connectDeferred_ = null;\n        _this.connectError_ = null;\n        _this.disconnectDeferred_ = null;\n\n        _this.state = Client.States.READY;\n\n        _this.uptimeInterval_ = 5000;\n        _this.uptimeBuffer_ = [];\n        _this.uptimeBufferLength_ = 5 * 60000 / _this.uptimeInterval_;\n        _this.uptimeCheck_ = options.keepUptime ? setInterval(_this.uptimeTick_.bind(_this), _this.uptimeInterval_) : null;\n\n        _this.autoPing_ = _this.pingInterval > 0 ? debounce(function () {\n            if (_this.state != Client.States.CONNECTED) return;\n\n            _this.ping().then(function () {\n                if (_this.pingInterval > 0 && _this.state == Client.States.CONNECTED) {\n                    _this.autoPing_();\n                }\n            }).catch(function () {});\n        }, _this.pingInterval) : function () {};\n        return _this;\n    }\n\n    /**\n     * Connects to server.\n     * @returns {Promise}\n     * @example\n     * client\n     *   .connect()\n     *   .then((handshakeResponse) => {\n     *     // handshakeResponse will be undefined if you do not resolve\n     *     // the handshake with a payload in server\n     *     console.log('Connected');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not connect');\n     *   })\n     */\n\n\n    _createClass(Client, [{\n        key: 'connect',\n        value: function connect() {\n            var _this2 = this;\n\n            switch (this.state) {\n                case Client.States.CONNECTING:\n                    return Promise.reject(new Error('Could not connect, already trying to connect to a host...'));\n                case Client.States.CONNECTED:\n                    return Promise.reject(new Error('Already connected.'));\n                case Client.States.CLOSING:\n                    return Promise.reject(new Error('Terminating an active connecting, try again later.'));\n                case Client.States.CLOSED:\n                case Client.States.READY:\n                    this.connectError_ = null;\n                    this.connectDeferred_ = new Deferred({\n                        handler: function handler() {\n                            _this2.state = Client.States.CONNECTING;\n                            _this2.emit(Client.Events.CONNECTING);\n                            _this2.reconnectDisabled_ = false;\n\n                            setTimeout(function (_) {\n                                _this2.ws_ = new WebSocket(_this2.url);\n                                _this2.bindEvents_();\n                            }, 0);\n                        }\n                    });\n\n                    return this.connectDeferred_;\n                default:\n                    return Promise.reject(new Error('Could not connect, unknown state.'));\n            }\n        }\n\n        /**\n         * Gracefully closes the connection\n         *\n         * @param {number=} code\n         * @param {any=} reason\n         * @param {boolean=} opt_retry\n         * @returns {Promise}\n         * @example\n         * client\n         *   .disconnect()\n         *   .then(() => {\n         *     // Client will not try to reconnect\n         *     console.log('Disconnected');\n         *   })\n         *   .catch((err) => {\n         *     console.log('Could not disconnect');\n         *   })\n         */\n\n    }, {\n        key: 'disconnect',\n        value: function disconnect(code, reason, opt_retry) {\n            switch (this.state) {\n                case Client.States.ERROR:\n                case Client.States.CONNECTED:\n                case Client.States.CONNECTING:\n                    this.reconnectDisabled_ = !opt_retry;\n                    this.disconnectDeferred_ = new Deferred();\n                    this.ws_.close(code, reason);\n                    this.state = Client.States.CLOSING;\n                    return this.disconnectDeferred_;\n                case Client.States.CLOSED:\n                    return Promise.reject(new Error('There is no connection to disconnect.'));\n                case Client.States.CLOSING:\n                    return Promise.reject(new Error('Already terminating a connecting, try again later.'));\n            }\n        }\n    }, {\n        key: 'bindEvents_',\n        value: function bindEvents_() {\n            this.ws_.onopen = this.onOpen.bind(this);\n            this.ws_.onclose = this.onClose.bind(this);\n            this.ws_.onerror = this.onError.bind(this);\n            this.ws_.onmessage = this.onMessage.bind(this);\n        }\n    }, {\n        key: 'unBindEvents_',\n        value: function unBindEvents_() {\n            if (!this.ws_) return;\n            this.ws_.onopen = function () {};\n            this.ws_.onclose = function () {};\n            this.ws_.onerror = function () {};\n            this.ws_.onmessage = function () {};\n        }\n    }, {\n        key: 'disposeConnectionPromisses_',\n        value: function disposeConnectionPromisses_() {\n            if (this.connectDeferred_) {\n                this.connectDeferred_.reject(this.connectError_);\n                this.connectDeferred_ = null;\n                this.connectError_ = null;\n            }\n\n            if (this.disconnectDeferred_) {\n                this.disconnectDeferred_.reject();\n                this.disconnectDeferred_ = null;\n            }\n        }\n    }, {\n        key: 'onOpen',\n        value: function onOpen() {\n            var _this3 = this;\n\n            // this.updateState_();\n            // this.emit('_open');\n            this.send(Message.Names.HANDSHAKE, this.options.handshakePayload).then(function (data) {\n                _this3.id = data.id;\n                _this3.serverTimeout_ = data.timeout;\n                _this3.maxReconnectDelay = data.maxReconnectDelay;\n                _this3.initialReconnectDelay = data.initialReconnectDelay;\n                _this3.reconnectIncrementFactor = data.reconnectIncrementFactor;\n                _this3.pingInterval = data.pingInterval;\n\n                if (_this3.connectDeferred_) {\n                    _this3.connectDeferred_.resolve(data.handshakePayload);\n                    _this3.connectDeferred_ = null;\n                    _this3.connectError_ = null;\n                }\n\n                _this3.state = Client.States.CONNECTED;\n                _this3.emit(Client.Events.CONNECTED, data.handshakePayload);\n            }).catch(function (err) {\n                _this3.connectError_ = err;\n                _this3.emit(Client.Events.ERROR, err);\n                return _this3.disconnect();\n            }).catch(function (err) {\n                console.log('Could not disconnect after failed handshake', err);\n            });\n        }\n    }, {\n        key: 'onClose',\n        value: function onClose(err) {\n            var _this4 = this;\n\n            this.unBindEvents_();\n            this.id = null;\n            this.ws_ = null;\n\n            this.emit(Client.Events.CLOSED, err);\n\n            switch (this.state) {\n                case Client.States.CLOSING:\n                    this.state = Client.States.CLOSED;\n\n                    if (this.disconnectDeferred_) {\n                        this.disconnectDeferred_.resolve();\n                        this.disconnectDeferred_ = null;\n                    }\n\n                    if (this.connectDeferred_) {\n                        this.connectDeferred_.reject(this.connectError_ || new Error('Connection closed while connecting...'));\n                        this.connectDeferred_ = null;\n                        this.connectError_ = null;\n                    }\n\n                    if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) return;\n\n                    break;\n                case Client.States.CONNECTING:\n                    this.state = Client.States.CLOSED;\n\n                    if (this.disconnectDeferred_) {\n                        this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                        this.disconnectDeferred_ = null;\n                    }\n\n                    if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) {\n                        if (this.connectDeferred_) {\n                            this.connectDeferred_.reject(this.connectError_);\n                            this.connectDeferred_ = null;\n                            this.connectError_ = null;\n                        }\n                        return;\n                    }\n\n                    break;\n                default:\n                    this.state = Client.States.CLOSED;\n\n                    if (this.disconnectDeferred_) {\n                        this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                        this.disconnectDeferred_ = null;\n                    }\n\n                    if (this.connectDeferred_) {\n                        this.connectDeferred_.reject(new Error('Already connected'));\n                        this.connectDeferred_ = null;\n                        this.connectError_ = null;\n                    }\n\n                    if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) return;\n            }\n\n            this.retrying_ = true;\n            Utils.retry(function (_) {\n                return _this4.connect();\n            }, {\n                maxCount: this.maxReconnectDelay,\n                initialDelay: this.initialReconnectDelay,\n                increaseFactor: this.reconnectIncrementFactor\n            }).then(function (_) {\n                _this4.retrying_ = false;\n            });\n        }\n    }, {\n        key: 'onError',\n        value: function onError(err) {\n            var eventName = this.state == Client.States.CONNECTING ? Client.Events.CONNECTING_ERROR : Client.Events.ERROR;\n\n            this.emit(eventName, err || new Error('Unknown error'));\n        }\n    }, {\n        key: 'onMessage',\n        value: function onMessage(e) {\n            var _this5 = this;\n\n            var message = Message.parse(e.data);\n\n            this.autoPing_();\n\n            // Message without response (no id fields)\n            if (!message.id && Message.ReservedNames.indexOf(message.name) == -1) return this.emit(message.name, message);\n\n            // Ping\n            if (message.name == Message.Names.PING) {\n                return this.onPing_(message);\n            }\n\n            // Message response\n            if (message.name == Message.Names.RESPONSE && this.deferreds_[message.id]) {\n                var deferred = this.deferreds_[message.id];\n\n                if (message.err) {\n                    var err = Object.assign(new Error(), message.err);\n                    deferred.reject(err);\n                } else {\n                    deferred.resolve(message.payload);\n                }\n\n                delete this.deferreds_[message.id];\n                return;\n            }\n\n            // Message with response\n            message.once('resolved', function (payload) {\n                _this5.send_(message.createResponse(null, payload));\n                message.dispose();\n            });\n\n            message.once('rejected', function (err) {\n                if (isObject(err) && err instanceof Error && err.name == 'Error') err = { message: err.message, name: 'Error' };\n                _this5.send_(message.createResponse(err));\n                message.dispose();\n            });\n\n            this.emit(message.name, message);\n        }\n    }, {\n        key: 'onPing_',\n        value: function onPing_(message) {\n            this.send_(message.createResponse(null, 'pong')).catch(function (err) {\n                console.log('Ping responce failed to send', err);\n            });\n        }\n\n        /**\n         * Sends a message to server with awaiting its response.\n         *\n         * @param {string} eventName\n         * @param {any=} payload\n         * @returns {Promise}\n         * @example\n         * client\n         *   .send('hello', {some: data})\n         *   .then((response) => {\n         *     console.log('Sent and got the response');\n         *   })\n         *   .catch((err) => {\n         *     console.log('Could not send message OR server rejected the message');\n         *   });\n         */\n\n    }, {\n        key: 'send',\n        value: function send(eventName, payload) {\n            var _this6 = this;\n\n            var message = new Message({ name: eventName, payload: payload });\n            message.setId();\n\n            return this.send_(message).then(function (_) {\n                var deferred = _this6.deferreds_[message.id] = new Deferred({\n                    onExpire: function onExpire() {\n                        delete _this6.deferreds_[message.id];\n                    },\n                    timeout: _this6.serverTimeout_\n                });\n\n                return deferred;\n            });\n        }\n\n        /**\n         * Sends a message to server without waiting its response.\n         *\n         * @param {string} eventName\n         * @param {any=} payload\n         * @returns {Promise}\n         * @example\n         * client\n         *   .sendWithoutResponse('hello', {some: data})\n         *   .then(() => {\n         *     console.log('Message is sent');\n         *   })\n         *   .catch((err) => {\n         *     console.log('Could not send message');\n         *   });\n         */\n\n    }, {\n        key: 'sendWithoutResponse',\n        value: function sendWithoutResponse(eventName, payload) {\n            var message = new Message({ name: eventName, payload: payload });\n            return this.send_(message);\n        }\n    }, {\n        key: 'send_',\n        value: function send_(message) {\n            var _this7 = this;\n\n            return new Promise(function (resolve) {\n                _this7.ws_.send(message.toString());\n                resolve();\n            });\n        }\n\n        /**\n         * Sends a ping message to server, if its failed, the connection will be closed.\n         * Server and client ping each other automatically with an interval specified by the server.\n         *\n         * @returns {Promise}\n         */\n\n    }, {\n        key: 'ping',\n        value: function ping() {\n            var _this8 = this;\n\n            return this.send(Message.Names.PING).catch(function (err) {\n                _this8.disconnect(500, 'Auto ping failed', true);\n                throw err;\n            });\n        }\n    }, {\n        key: 'uptimeTick_',\n        value: function uptimeTick_() {\n            this.uptimeBuffer_.push(this.state == Client.States.CONNECTED);\n\n            if (this.uptimeBuffer_.length > this.uptimeBufferLength_) {\n                this.uptimeBuffer_.splice(0, this.uptimeBufferLength_ - this.uptimeBuffer_.length);\n            }\n        }\n\n        /**\n         * Calculates (connection) uptime for last 5 minutes with 5 seconds interval.\n         * Returns a number between 0 and 1. If `options.keepUptime` is false, this method\n         * returns null.\n         * @returns {number?}\n         */\n\n    }, {\n        key: 'getUptime',\n        value: function getUptime() {\n            if (!this.options.keepUptime) return null;\n            if (this.uptimeBuffer_.length == 0) return 0;\n            return this.uptimeBuffer_.filter(function (val) {\n                return val;\n            }).length / this.uptimeBuffer_.length;\n        }\n    }, {\n        key: 'dispose',\n        value: function dispose() {\n            this.removeAllListeners();\n            // TODO: Maybe reject all deferreds?\n            this.uptimeBuffer_ = [];\n            if (this.uptimeCheck_) clearInterval(this.uptimeCheck_);\n        }\n    }]);\n\n    return Client;\n}(EventEmitterExtra);\n\n/**\n * @static\n * @readonly\n * @enum {number}\n */\n\n\nClient.States = {\n    /**\n     * `-1`\n     */\n    READY: -1,\n    /**\n     * `0`\n     */\n    CONNECTING: 0,\n    /**\n     * `1`\n     */\n    CONNECTED: 1,\n    /**\n     * `2`\n     */\n    CLOSING: 2,\n    /**\n     * `3`\n     */\n    CLOSED: 3\n};\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\nClient.Events = {\n    /**\n     * `_connecting`\n     */\n    CONNECTING: '_connecting',\n    /**\n     * `_connecting_error`\n     */\n    CONNECTING_ERROR: '_connecting_error',\n    /**\n     * `_connected`\n     */\n    CONNECTED: '_connected',\n    /**\n     * `_closed`\n     */\n    CLOSED: '_closed',\n    /**\n     * `_error`\n     */\n    ERROR: '_error'\n};\n\nmodule.exports = Client;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"uws\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Deferred = function () {\n    function Deferred() {\n        var _this = this;\n\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref$handler = _ref.handler,\n            handler = _ref$handler === undefined ? function () {} : _ref$handler,\n            _ref$onExpire = _ref.onExpire,\n            onExpire = _ref$onExpire === undefined ? function () {} : _ref$onExpire,\n            _ref$timeout = _ref.timeout,\n            timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n        _classCallCheck(this, Deferred);\n\n        this.resolve_ = null;\n        this.reject_ = null;\n\n        this.timeout_ = null;\n        this.onExpire_ = onExpire;\n        this.isFinished_ = false;\n\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve_ = resolve;\n            _this.reject_ = reject;\n\n            try {\n                handler(_this);\n            } catch (err) {\n                _this.reject(err);\n            }\n        });\n\n        if (timeout > 0) {\n            this.timeout_ = setTimeout(this.expire.bind(this), timeout);\n        }\n    }\n\n    _createClass(Deferred, [{\n        key: 'resolve',\n        value: function resolve(data) {\n            if (this.isFinished_) return;\n\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.resolve_(data);\n        }\n    }, {\n        key: 'reject',\n        value: function reject(err) {\n            if (this.isFinished_) return;\n\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.reject_(err);\n        }\n    }, {\n        key: 'expire',\n        value: function expire() {\n            this.isFinished_ = true;\n            this.clearTimeout_();\n            this.onExpire_();\n            this.reject_(new Error('Timeout exceed'));\n        }\n    }, {\n        key: 'then',\n        value: function then() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            return this.promise.then.apply(this.promise, args);\n        }\n    }, {\n        key: 'catch',\n        value: function _catch() {\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            return this.promise.catch.apply(this.promise, args);\n        }\n    }, {\n        key: 'clearTimeout_',\n        value: function clearTimeout_() {\n            if (this.timeout_) {\n                clearTimeout(this.timeout_);\n                this.timeout_ = null;\n            }\n        }\n    }]);\n\n    return Deferred;\n}();\n\nmodule.exports = Deferred;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar isUndefined = __webpack_require__(11);\nvar isObject = __webpack_require__(2);\nvar isFunction = __webpack_require__(10);\nvar values = __webpack_require__(12);\n\nvar _require = __webpack_require__(0),\n    generateDummyId = _require.generateDummyId;\n\nvar EventEmitterExtra = __webpack_require__(1);\n\n/**\n * Message class.\n *\n * @private\n * @class Message\n * @extends {EventEmitterExtra}\n * @property {string} name Event name\n * @property {?any} payload Message payload.\n */\n\nvar Message = function (_EventEmitterExtra) {\n    _inherits(Message, _EventEmitterExtra);\n\n    _createClass(Message, null, [{\n        key: 'parse',\n        value: function parse(raw) {\n            try {\n                var data = JSON.parse(raw);\n                return new Message({\n                    name: data.n,\n                    payload: data.p,\n                    err: data.e,\n                    id: data.i\n                });\n            } catch (err) {\n                throw new Error('Could not parse message.');\n            }\n        }\n    }]);\n\n    function Message(_ref) {\n        var name = _ref.name,\n            payload = _ref.payload,\n            id = _ref.id,\n            err = _ref.err;\n\n        _classCallCheck(this, Message);\n\n        var _this = _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).call(this));\n\n        _this.name = name;\n        _this.payload = payload;\n        _this.id = id;\n        _this.err = err;\n\n        _this.isResponded_ = false;\n        return _this;\n    }\n\n    _createClass(Message, [{\n        key: 'setId',\n        value: function setId() {\n            var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : generateDummyId();\n\n            this.id = id;\n            return id;\n        }\n    }, {\n        key: 'createResponse',\n        value: function createResponse(err, payload) {\n            return new Message({ name: '_r', payload: payload, err: err, id: this.id });\n        }\n\n        /**\n         * Resolves the message with sending a response back. If event source\n         * does not expecting a response, you don't need to call these methods.\n         * @param {any=} payload\n         */\n\n    }, {\n        key: 'resolve',\n        value: function resolve(payload) {\n            var _this2 = this;\n\n            if (isUndefined(this.id)) return console.warn('[line] A message without an id cannot be resolved.');\n\n            if (this.isResponded_) return console.warn('[line] This message has already been ended.');\n\n            // If thenable\n            if (isObject(payload) && isFunction(payload.then)) {\n                payload.then(function (response) {\n                    _this2.isResponded_ = true;\n                    _this2.emit('resolved', payload);\n                }).catch(function (err) {\n                    _this2.isResponded_ = true;\n                    _this2.emit('rejected', err);\n                });\n\n                return;\n            }\n\n            this.isResponded_ = true;\n            this.emit('resolved', payload);\n        }\n\n        /**\n         * Rejects the message, with sending error response back to event source.\n         * @param {any=} err\n         */\n\n    }, {\n        key: 'reject',\n        value: function reject(err) {\n            if (isUndefined(this.id)) return console.warn('[line] A message without an id cannot be rejected.');\n\n            if (this.isResponded_) return console.warn('[line] This message has already been ended.');\n\n            this.isResponded_ = true;\n            this.emit('rejected', err);\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            try {\n                var data = { n: this.name };\n\n                if (!isUndefined(this.payload)) data.p = this.payload;\n\n                if (!isUndefined(this.id)) data.i = this.id;\n\n                if (!isUndefined(this.err)) data.e = this.err;\n\n                return JSON.stringify(data);\n            } catch (err) {\n                throw new Error('Could not stringify message.');\n            }\n        }\n    }, {\n        key: 'dispose',\n        value: function dispose() {\n            var _this3 = this;\n\n            var events = this.eventNames();\n            events.forEach(function (event) {\n                return _this3.removeAllListeners(event);\n            });\n        }\n    }]);\n\n    return Message;\n}(EventEmitterExtra);\n\nMessage.Names = {\n    RESPONSE: '_r',\n    HANDSHAKE: '_h',\n    PING: '_p'\n};\n\nMessage.ReservedNames = values(Message.Names);\n\nmodule.exports = Message;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/assign\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/debounce\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isBoolean\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isFunction\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/isUndefined\");\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"lodash/values\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nglobal.WebSocket = __webpack_require__(4);\nvar WebClient = __webpack_require__(3);\n\nvar NodeClient = function (_WebClient) {\n    _inherits(NodeClient, _WebClient);\n\n    function NodeClient() {\n        _classCallCheck(this, NodeClient);\n\n        return _possibleConstructorReturn(this, (NodeClient.__proto__ || Object.getPrototypeOf(NodeClient)).apply(this, arguments));\n    }\n\n    _createClass(NodeClient, [{\n        key: 'bindEvents_',\n        value: function bindEvents_() {\n            var _this2 = this;\n\n            this.ws_.on('open', this.onOpen.bind(this));\n            this.ws_.on('error', this.onError.bind(this));\n\n            this.ws_.on('close', function (code, reason) {\n                if (code == 0) code = 1005;\n                _this2.onClose({ code: code, reason: reason });\n            });\n\n            this.ws_.on('message', function (data) {\n                _this2.onMessage({ data: data });\n            });\n        }\n    }, {\n        key: 'send_',\n        value: function send_(message) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this3.ws_.send(message.toString(), function (err) {\n                    if (err) return reject(err);\n                    resolve();\n                });\n            });\n        }\n    }, {\n        key: 'onError',\n        value: function onError(err) {\n            var _this4 = this;\n\n            if (!err) err = { code: 1006, reason: '' };\n\n            _get(NodeClient.prototype.__proto__ || Object.getPrototypeOf(NodeClient.prototype), 'onError', this).call(this);\n\n            /* Work-around for node; onClose not being called after error */\n            setTimeout(function (_) {\n                return _this4.onClose(err);\n            });\n        }\n    }]);\n\n    return NodeClient;\n}(WebClient);\n\nmodule.exports = NodeClient;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// client-node.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 776772322c229edbcae4","const assign = require('lodash/assign');\n\n\nfunction promiseDelay(ms) {\n    return new Promise(resolve => setTimeout(_ => resolve(), ms))\n}\n\n\nfunction retry(task, options = {}) {\n    const defaults = {maxDelay: 160, maxCount: 0, initialDelay: 3, increaseFactor: 2};\n    options = assign(defaults, options);\n    let timeout;\n    let counter = 1;\n    let delay = options.initialDelay;\n\n    const once = function() {\n        return task()\n            .catch(err => {\n                counter++;\n                delay = delay * options.increaseFactor;\n\n                if (options.maxCount != 0 && counter > options.maxCount) {\n                    timeout && clearTimeout(timeout);\n                    throw err;\n                }\n                return promiseDelay(delay * 1000 / 2).then(_ => once());\n            });\n    }\n\n    return once();\n}\n\n\n// http://stackoverflow.com/a/6248722\nfunction generateDummyId(length = 4) {\n    return (\"0000\" + (Math.random()*Math.pow(36,length) << 0).toString(36)).slice(-length);\n}\n\n\nmodule.exports = {promiseDelay, retry, generateDummyId};\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils.js","module.exports = require(\"event-emitter-extra/dist/commonjs.modern\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"event-emitter-extra/dist/commonjs.modern\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"lodash/isObject\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isObject\"\n// module id = 2\n// module chunks = 0","const Message = require('../lib/message');\nconst Utils = require('../lib/utils');\nconst EventEmitterExtra = require('event-emitter-extra/dist/commonjs.modern');\nconst Deferred = require('../lib/deferred');\nconst debounce = require('lodash/debounce');\nconst isObject = require('lodash/isObject');\nconst isBoolean = require('lodash/isBoolean');\n\n\n/**\n * Line client class.\n *\n * @class Client\n * @extends {EventEmitterExtra}\n * @param {string=} url Server url, default: `ws://localhost`.\n * @param {Object=} options Options object.\n * @param {boolean=} options.reconnect Try to reconnect server after unexpected disconnection, default `true`.\n * @param {boolean=} options.keepUptime Keeps uptime, default `false`.\n * @param {any=} options.handshakePayload Handshake payload to be sent to server.\n * @property {string} url Server url\n * @property {string} id Unique connection id assigned by the server\n * @property {Client.States} state Connection state\n * @example\n * // Add line-client to your html document\n * <script src=\"./node_modules/line-socket/dist/client-web-globals.js\"></script>\n *\n * // For web browsers (consuming as a commonjs module)\n * const LineClient = require('line-socket/client-web');\n *\n * // For node.js\n * const LineClient = require('line-socket/client-node');\n *\n *\n * const client = new LineClient('ws://localhost:8080', {\n *   reconnect: false,\n *   handshakePayload: { token: 'a6g3X' }\n * });\n */\nclass Client extends EventEmitterExtra {\n    constructor(url = 'ws://localhost', options = {}) {\n        super();\n\n        this.url = url;\n\n        this.options = options;\n\n        this.ws_ = null;\n        this.id = null;\n        this.reconnect = isBoolean(options.reconnect) ? options.reconnect : true;\n        this.reconnectDisabled_ = false;\n\n        this.serverTimeout_ = 30000;\n        this.maxReconnectDelay = 60;\n        this.initialReconnectDelay = 1;\n        this.reconnectIncrementFactor = 2;\n        this.pingInterval = 60000;\n\n        this.deferreds_ = {};\n        this.connectDeferred_ = null;\n        this.connectError_ = null;\n        this.disconnectDeferred_ = null;\n\n\n        this.state = Client.States.READY;\n\n        this.uptimeInterval_ = 5000;\n        this.uptimeBuffer_ = [];\n        this.uptimeBufferLength_ = 5 * 60000 / this.uptimeInterval_;\n        this.uptimeCheck_ = options.keepUptime ? setInterval(this.uptimeTick_.bind(this), this.uptimeInterval_) : null;\n\n        this.autoPing_ = this.pingInterval > 0 ?\n            debounce(() => {\n                if (this.state != Client.States.CONNECTED)\n                    return;\n\n                this\n                    .ping()\n                    .then(() => {\n                        if (this.pingInterval > 0 && this.state == Client.States.CONNECTED) {\n                            this.autoPing_();\n                        }\n                    })\n                    .catch(() => {});\n            }, this.pingInterval) :\n            () => {};\n    }\n\n\n    /**\n     * Connects to server.\n     * @returns {Promise}\n     * @example\n     * client\n     *   .connect()\n     *   .then((handshakeResponse) => {\n     *     // handshakeResponse will be undefined if you do not resolve\n     *     // the handshake with a payload in server\n     *     console.log('Connected');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not connect');\n     *   })\n     */\n    connect() {\n        switch (this.state) {\n            case Client.States.CONNECTING:\n                return Promise.reject(new Error('Could not connect, already trying to connect to a host...'));\n            case Client.States.CONNECTED:\n                return Promise.reject(new Error('Already connected.'));\n            case Client.States.CLOSING:\n                return Promise.reject(new Error('Terminating an active connecting, try again later.'));\n            case Client.States.CLOSED:\n            case Client.States.READY:\n                this.connectError_ = null;\n                this.connectDeferred_ = new Deferred({\n                    handler: () => {\n                        this.state = Client.States.CONNECTING;\n                        this.emit(Client.Events.CONNECTING);\n                        this.reconnectDisabled_ = false;\n\n                        setTimeout(_ => {\n                            this.ws_ = new WebSocket(this.url);\n                            this.bindEvents_();\n                        }, 0);\n                    }\n                });\n\n                return this.connectDeferred_;\n            default:\n                return Promise.reject(new Error('Could not connect, unknown state.'))\n        }\n    }\n\n\n    /**\n     * Gracefully closes the connection\n     *\n     * @param {number=} code\n     * @param {any=} reason\n     * @param {boolean=} opt_retry\n     * @returns {Promise}\n     * @example\n     * client\n     *   .disconnect()\n     *   .then(() => {\n     *     // Client will not try to reconnect\n     *     console.log('Disconnected');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not disconnect');\n     *   })\n     */\n    disconnect(code, reason, opt_retry) {\n        switch (this.state) {\n            case Client.States.ERROR:\n            case Client.States.CONNECTED:\n            case Client.States.CONNECTING:\n                this.reconnectDisabled_ = !opt_retry;\n                this.disconnectDeferred_ = new Deferred();\n                this.ws_.close(code, reason);\n                this.state = Client.States.CLOSING;\n                return this.disconnectDeferred_;\n            case Client.States.CLOSED:\n                return Promise.reject(new Error('There is no connection to disconnect.'));\n            case Client.States.CLOSING:\n                return Promise.reject(new Error('Already terminating a connecting, try again later.'));\n        }\n    }\n\n\n    bindEvents_() {\n        this.ws_.onopen = this.onOpen.bind(this);\n        this.ws_.onclose = this.onClose.bind(this);\n        this.ws_.onerror = this.onError.bind(this);\n        this.ws_.onmessage = this.onMessage.bind(this);\n    }\n\n\n    unBindEvents_() {\n        if (!this.ws_) return;\n        this.ws_.onopen = function() {};\n        this.ws_.onclose = function() {};\n        this.ws_.onerror = function() {};\n        this.ws_.onmessage = function() {};\n    }\n\n\n    disposeConnectionPromisses_() {\n        if (this.connectDeferred_) {\n            this.connectDeferred_.reject(this.connectError_);\n            this.connectDeferred_ = null;\n            this.connectError_ = null;\n        }\n\n        if (this.disconnectDeferred_) {\n            this.disconnectDeferred_.reject();\n            this.disconnectDeferred_ = null;\n        }\n    }\n\n\n    onOpen() {\n        // this.updateState_();\n        // this.emit('_open');\n        this.send(Message.Names.HANDSHAKE, this.options.handshakePayload)\n            .then(data => {\n                this.id = data.id;\n                this.serverTimeout_ = data.timeout;\n                this.maxReconnectDelay = data.maxReconnectDelay;\n                this.initialReconnectDelay = data.initialReconnectDelay;\n                this.reconnectIncrementFactor = data.reconnectIncrementFactor;\n                this.pingInterval = data.pingInterval;\n\n                if (this.connectDeferred_) {\n                    this.connectDeferred_.resolve(data.handshakePayload);\n                    this.connectDeferred_ = null;\n                    this.connectError_ = null;\n                }\n\n                this.state = Client.States.CONNECTED;\n                this.emit(Client.Events.CONNECTED, data.handshakePayload);\n            })\n            .catch(err => {\n                this.connectError_ = err;\n                this.emit(Client.Events.ERROR, err);\n                return this.disconnect();\n            })\n            .catch(err => {\n                console.log('Could not disconnect after failed handshake', err);\n            });\n    }\n\n\n    onClose(err) {\n        this.unBindEvents_();\n        this.id = null;\n        this.ws_ = null;\n\n        this.emit(Client.Events.CLOSED, err);\n\n        switch(this.state) {\n            case Client.States.CLOSING:\n                this.state = Client.States.CLOSED;\n\n                if (this.disconnectDeferred_) {\n                    this.disconnectDeferred_.resolve();\n                    this.disconnectDeferred_ = null;\n                }\n\n                if (this.connectDeferred_) {\n                    this.connectDeferred_.reject(this.connectError_ || new Error('Connection closed while connecting...'));\n                    this.connectDeferred_ = null;\n                    this.connectError_ = null;\n                }\n\n                if (!this.reconnect || this.retrying_ || this.reconnectDisabled_)\n                    return;\n\n                break;\n            case Client.States.CONNECTING:\n                this.state = Client.States.CLOSED;\n\n                if (this.disconnectDeferred_) {\n                    this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                    this.disconnectDeferred_ = null;\n                }\n\n                if (!this.reconnect || this.retrying_ || this.reconnectDisabled_) {\n                    if (this.connectDeferred_) {\n                        this.connectDeferred_.reject(this.connectError_);\n                        this.connectDeferred_ = null;\n                        this.connectError_ = null;\n                    }\n                    return;\n                }\n\n                break;\n            default:\n                this.state = Client.States.CLOSED;\n\n                if (this.disconnectDeferred_) {\n                    this.disconnectDeferred_.reject(new Error('Already disconnected'));\n                    this.disconnectDeferred_ = null;\n                }\n\n                if (this.connectDeferred_) {\n                    this.connectDeferred_.reject(new Error('Already connected'));\n                    this.connectDeferred_ = null;\n                    this.connectError_ = null;\n                }\n\n                if (!this.reconnect || this.retrying_ || this.reconnectDisabled_)\n                    return;\n        }\n\n        this.retrying_ = true;\n        Utils\n            .retry(\n                _ => this.connect(),\n                {\n                    maxCount: this.maxReconnectDelay,\n                    initialDelay: this.initialReconnectDelay,\n                    increaseFactor: this.reconnectIncrementFactor\n                })\n            .then(_ => {\n                this.retrying_ = false;\n            });\n    }\n\n\n    onError(err) {\n        const eventName = this.state == Client.States.CONNECTING ?\n                Client.Events.CONNECTING_ERROR : Client.Events.ERROR;\n\n        this.emit(eventName, err || new Error('Unknown error'));\n    }\n\n\n    onMessage(e) {\n        const message = Message.parse(e.data);\n\n        this.autoPing_();\n\n        // Message without response (no id fields)\n        if (!message.id && Message.ReservedNames.indexOf(message.name) == -1)\n            return this.emit(message.name, message);\n\n        // Ping\n        if (message.name == Message.Names.PING) {\n            return this.onPing_(message);\n        }\n\n        // Message response\n        if (message.name == Message.Names.RESPONSE && this.deferreds_[message.id]) {\n            const deferred = this.deferreds_[message.id];\n\n            if (message.err) {\n                const err = Object.assign(new Error(), message.err);\n                deferred.reject(err);\n            } else {\n                deferred.resolve(message.payload);\n            }\n\n            delete this.deferreds_[message.id];\n            return;\n        }\n\n        // Message with response\n        message.once('resolved', payload => {\n            this.send_(message.createResponse(null, payload));\n            message.dispose();\n        });\n\n        message.once('rejected', err => {\n            if (isObject(err) && err instanceof Error && err.name == 'Error')\n               err = {message: err.message, name: 'Error'};\n            this.send_(message.createResponse(err));\n            message.dispose();\n        });\n\n        this.emit(message.name, message);\n    }\n\n\n    onPing_(message) {\n        this\n            .send_(message.createResponse(null, 'pong'))\n            .catch(err => {\n                console.log('Ping responce failed to send', err);\n            });\n    }\n\n\n    /**\n     * Sends a message to server with awaiting its response.\n     *\n     * @param {string} eventName\n     * @param {any=} payload\n     * @returns {Promise}\n     * @example\n     * client\n     *   .send('hello', {some: data})\n     *   .then((response) => {\n     *     console.log('Sent and got the response');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not send message OR server rejected the message');\n     *   });\n     */\n    send(eventName, payload) {\n        const message = new Message({name: eventName, payload});\n        message.setId();\n\n        return this\n            .send_(message)\n            .then(_ => {\n                const deferred = this.deferreds_[message.id] = new Deferred({\n                    onExpire: () => {\n                        delete this.deferreds_[message.id];\n                    },\n                    timeout: this.serverTimeout_\n                });\n\n                return deferred;\n            });\n    }\n\n\n    /**\n     * Sends a message to server without waiting its response.\n     *\n     * @param {string} eventName\n     * @param {any=} payload\n     * @returns {Promise}\n     * @example\n     * client\n     *   .sendWithoutResponse('hello', {some: data})\n     *   .then(() => {\n     *     console.log('Message is sent');\n     *   })\n     *   .catch((err) => {\n     *     console.log('Could not send message');\n     *   });\n     */\n    sendWithoutResponse(eventName, payload) {\n        const message = new Message({name: eventName, payload});\n        return this.send_(message);\n    }\n\n\n    send_(message) {\n        return new Promise(resolve => {\n            this.ws_.send(message.toString());\n            resolve();\n        });\n    }\n\n\n    /**\n     * Sends a ping message to server, if its failed, the connection will be closed.\n     * Server and client ping each other automatically with an interval specified by the server.\n     *\n     * @returns {Promise}\n     */\n    ping() {\n        return this\n            .send(Message.Names.PING)\n            .catch(err => {\n                this.disconnect(500, 'Auto ping failed', true);\n                throw err;\n            });\n    }\n\n\n    uptimeTick_() {\n        this.uptimeBuffer_.push(this.state == Client.States.CONNECTED);\n\n        if (this.uptimeBuffer_.length > this.uptimeBufferLength_) {\n            this.uptimeBuffer_.splice(0, this.uptimeBufferLength_ - this.uptimeBuffer_.length);\n        }\n    }\n\n\n    /**\n     * Calculates (connection) uptime for last 5 minutes with 5 seconds interval.\n     * Returns a number between 0 and 1. If `options.keepUptime` is false, this method\n     * returns null.\n     * @returns {number?}\n     */\n    getUptime() {\n        if (!this.options.keepUptime) return null;\n        if (this.uptimeBuffer_.length == 0) return 0;\n        return this.uptimeBuffer_.filter(val => val).length / this.uptimeBuffer_.length;\n    }\n\n\n    dispose() {\n        this.removeAllListeners();\n        // TODO: Maybe reject all deferreds?\n        this.uptimeBuffer_ = [];\n        if (this.uptimeCheck_) clearInterval(this.uptimeCheck_);\n    }\n}\n\n\n/**\n * @static\n * @readonly\n * @enum {number}\n */\nClient.States = {\n    /**\n     * `-1`\n     */\n    READY: -1,\n    /**\n     * `0`\n     */\n    CONNECTING: 0,\n    /**\n     * `1`\n     */\n    CONNECTED: 1,\n    /**\n     * `2`\n     */\n    CLOSING: 2,\n    /**\n     * `3`\n     */\n    CLOSED: 3\n};\n\n\n/**\n * @static\n * @readonly\n * @enum {string}\n */\nClient.Events = {\n    /**\n     * `_connecting`\n     */\n    CONNECTING: '_connecting',\n    /**\n     * `_connecting_error`\n     */\n    CONNECTING_ERROR: '_connecting_error',\n    /**\n     * `_connected`\n     */\n    CONNECTED: '_connected',\n    /**\n     * `_closed`\n     */\n    CLOSED: '_closed',\n    /**\n     * `_error`\n     */\n    ERROR: '_error'\n};\n\n\nmodule.exports = Client;\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/client-web.js","module.exports = require(\"uws\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uws\"\n// module id = 4\n// module chunks = 0","class Deferred {\n    constructor({\n        handler = () => {},\n        onExpire = () => {},\n        timeout = 0\n    } = {}) {\n        this.resolve_ = null;\n        this.reject_ = null;\n\n        this.timeout_ = null;\n        this.onExpire_ = onExpire;\n        this.isFinished_ = false;\n\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve_ = resolve;\n            this.reject_ = reject;\n\n            try {\n                handler(this);\n            } catch (err) {\n                this.reject(err);\n            }\n        });\n\n        if (timeout > 0) {\n            this.timeout_ = setTimeout(this.expire.bind(this), timeout);\n        }\n    }\n\n\n    resolve(data) {\n        if (this.isFinished_) return;\n\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.resolve_(data);\n    }\n\n\n    reject(err) {\n        if (this.isFinished_) return;\n\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.reject_(err);\n    }\n\n\n    expire() {\n        this.isFinished_ = true;\n        this.clearTimeout_();\n        this.onExpire_();\n        this.reject_(new Error('Timeout exceed'));\n    }\n\n\n    then(...args) {\n        return this.promise.then.apply(this.promise, args);\n    }\n\n\n    catch(...args) {\n        return this.promise.catch.apply(this.promise, args);\n    }\n\n\n    clearTimeout_() {\n        if (this.timeout_) {\n            clearTimeout(this.timeout_);\n            this.timeout_ = null;\n        }\n    }\n}\n\n\nmodule.exports = Deferred;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/deferred.js","const isUndefined = require('lodash/isUndefined');\nconst isObject = require('lodash/isObject');\nconst isFunction = require('lodash/isFunction');\nconst values = require('lodash/values');\nconst {generateDummyId} = require('./utils');\nconst EventEmitterExtra = require('event-emitter-extra/dist/commonjs.modern');\n\n\n/**\n * Message class.\n *\n * @private\n * @class Message\n * @extends {EventEmitterExtra}\n * @property {string} name Event name\n * @property {?any} payload Message payload.\n */\nclass Message extends EventEmitterExtra {\n    static parse(raw) {\n        try {\n            const data = JSON.parse(raw);\n            return new Message({\n                name: data.n,\n                payload: data.p,\n                err: data.e,\n                id: data.i\n            });\n        } catch(err) {\n            throw new Error(`Could not parse message.`);\n        }\n    }\n\n    constructor({name, payload, id, err}) {\n        super();\n\n        this.name = name;\n        this.payload = payload;\n        this.id = id;\n        this.err = err;\n\n        this.isResponded_ = false;\n    }\n\n    setId(id = generateDummyId()) {\n        this.id = id;\n        return id;\n    }\n\n    createResponse(err, payload) {\n        return new Message({name: '_r', payload, err, id: this.id});\n    }\n\n\n    /**\n     * Resolves the message with sending a response back. If event source\n     * does not expecting a response, you don't need to call these methods.\n     * @param {any=} payload\n     */\n    resolve(payload) {\n        if (isUndefined(this.id))\n            return console.warn('[line] A message without an id cannot be resolved.');\n\n        if (this.isResponded_)\n            return console.warn('[line] This message has already been ended.');\n\n        // If thenable\n        if (isObject(payload) && isFunction(payload.then)) {\n            payload\n                .then(response => {\n                    this.isResponded_ = true;\n                    this.emit('resolved', payload);\n                })\n                .catch(err => {\n                    this.isResponded_ = true;\n                    this.emit('rejected', err);\n                });\n\n            return;\n        }\n\n        this.isResponded_ = true;\n        this.emit('resolved', payload);\n    }\n\n\n    /**\n     * Rejects the message, with sending error response back to event source.\n     * @param {any=} err\n     */\n    reject(err) {\n        if (isUndefined(this.id))\n            return console.warn('[line] A message without an id cannot be rejected.');\n\n        if (this.isResponded_)\n            return console.warn('[line] This message has already been ended.');\n\n        this.isResponded_ = true;\n        this.emit('rejected', err);\n    }\n\n    toString() {\n        try {\n            const data = {n: this.name};\n\n            if (!isUndefined(this.payload))\n                data.p = this.payload;\n\n            if (!isUndefined(this.id))\n                data.i = this.id;\n\n            if (!isUndefined(this.err))\n                data.e = this.err;\n\n            return JSON.stringify(data);\n        } catch(err) {\n            throw new Error(`Could not stringify message.`);\n        }\n    }\n\n    dispose() {\n        const events = this.eventNames();\n        events.forEach(event => this.removeAllListeners(event));\n    }\n}\n\n\nMessage.Names = {\n    RESPONSE: '_r',\n    HANDSHAKE: '_h',\n    PING: '_p'\n};\n\n\nMessage.ReservedNames = values(Message.Names);\n\n\nmodule.exports = Message;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/message.js","module.exports = require(\"lodash/assign\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/assign\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"lodash/debounce\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/debounce\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"lodash/isBoolean\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isBoolean\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"lodash/isFunction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isFunction\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"lodash/isUndefined\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/isUndefined\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"lodash/values\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash/values\"\n// module id = 12\n// module chunks = 0","global.WebSocket = require('uws');\nconst WebClient = require('./client-web');\n\n\nclass NodeClient extends WebClient {\n    bindEvents_() {\n        this.ws_.on('open', this.onOpen.bind(this));\n        this.ws_.on('error', this.onError.bind(this));\n\n        this.ws_.on('close', (code, reason) => {\n            if (code == 0) code = 1005;\n            this.onClose({code, reason});\n        });\n\n        this.ws_.on('message', (data) => {\n            this.onMessage({data});\n        });\n    }\n\n\n    send_(message) {\n        return new Promise((resolve, reject) => {\n            this.ws_.send(message.toString(), err => {\n                if (err) return reject(err);\n                resolve();\n            });\n        });\n    }\n\n\n    onError(err) {\n        if (!err) err = {code: 1006, reason: ''};\n\n        super.onError();\n\n        /* Work-around for node; onClose not being called after error */\n        setTimeout(_ => this.onClose(err));\n    }\n\n}\n\n\nmodule.exports = NodeClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/client-node.js"],"sourceRoot":""}